{
    "openapi": "3.0.1",
    "info": {
        "title": "API for 42Crunch Platform",
        "version": "1.0"
    },
    "x-42c-deactivate-allowlist": true,
    "x-42c-request-strategies": [
        {
            "x-42c-strategy": {
                "protections": [
                    {
                        "x-42c-request-allowlist": {}
                    }
                ]
            }
        }
    ],
    "servers": [
        {
            "url": "https://us.42crunch.cloud/"
        }
    ],
    "paths": {
        "/api/v1/collections": {
            "get": {
                "deprecated": true,
                "tags": [
                    "CollectionManager"
                ],
                "summary": "List API collections",
                "operationId": "CollectionListLegacy",
                "x-42c-actions": [
                    "CollectionsRead"
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionListBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CollectionManager"
                ],
                "summary": "Create a new API collection",
                "operationId": "CollectionCreate",
                "x-42c-actions": [
                    "CollectionsCreate"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionDescriptor"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "default": {
                        "$ref": "#/components/responses/Default"
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/api/v1/login": {
            "post": {
                "x-42c-local-strategy": {
                    "x-42c-strategy": {
                        "protections": [
                            {
                                "x-42c-anond-request-limiter_0.1": {
                                    "hits": 5,
                                    "window": 60,
                                    "header.name.key": "X-Forwarded-For"
                                }
                            }
                        ]
                    }
                },
                "tags": [
                    "AuthManager"
                ],
                "summary": "Login a new user - return a session cookie",
                "operationId": "UserLogin",
                "x-42c-actions": [
                    "UsersLogin"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthLoginData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "default": {
                        "$ref": "#/components/responses/Default"
                    }
                },
                "security": [],
                "x-codegen-request-body-name": "body"
            }
        },
        "/api/v2/vault/scan/organization/{vaultId}/meta": {
            "get": {
                "tags": [
                    "ScanVault"
                ],
                "summary": "Get the credentials vault metadata",
                "description": "This endpoint returns the metadata of the credential vault defined by `{vaultId}`",
                "operationId": "ScanVaultOrganizationGetMeta",
                "x-42c-actions": [
                    "ScanVaultsRead"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "vaultId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response returns the credential vault metadata defined by `{vaultId}`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VaultMeta"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "default": {
                        "$ref": "#/components/responses/Default"
                    }
                }
            },
            "put": {
                "tags": [
                    "ScanVault"
                ],
                "summary": "Update a scan credentials vault metadata",
                "description": "This endpoint allows you to update metadata of a scan credentials vault defined by `{vaultId}`.",
                "operationId": "ScanVaultOrganizationUpdateMeta",
                "x-42c-actions": [
                    "ScanVaultsUpdate"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "vaultId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VaultMeta"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The response returns an empty object when the update is successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VaultMeta"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "default": {
                        "$ref": "#/components/responses/Default"
                    }
                }
            }
        },
        "/api/v2/dataDictionaries": {
            "get": {
                "operationId": "DataDictionaryGetSummary",
                "x-42c-actions": [
                    "DataDictionariesGetContent"
                ],
                "summary": "Get data dictionaries summary",
                "description": "This endpoint returns a list of allowed Data Dictionaries. This list allows to get a single summary with dictionary informations. This is possible to include dictionary formats in the response using the query parameter {includeFormats}.",
                "tags": [
                    "DataDictionaries"
                ],
                "parameters": [
                    {
                        "name": "includeFormats",
                        "description": "This parameter allows to include all Data Dictionaries formats in the response.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "no",
                                "yes"
                            ],
                            "default": "no"
                        }
                    }
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response returns a list of available Data Dictionaries for the Organization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dataDictionariesSummary"
                                },
                                "example": {
                                    "list": [
                                        {
                                            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "name": "banking",
                                            "description": "Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                                            "shared": "no"
                                        },
                                        {
                                            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "name": "network",
                                            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                                            "shared": "yes",
                                            "formats": {
                                                "hostname-v1": {
                                                    "primitiveType": "format",
                                                    "name": "o:network:hostname-v1",
                                                    "format": "hostname",
                                                    "type": "string",
                                                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                                                    "pattern": "^http\\://www.[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}/$",
                                                    "example": "http://www.domain.tld",
                                                    "minLength": 0,
                                                    "maxLength": 100,
                                                    "readOnly": false,
                                                    "writeOnly": false,
                                                    "nullable": false,
                                                    "sensitivity": 1,
                                                    "pii": "no",
                                                    "objectIdentifier": "no",
                                                    "lastUpdate": "1637949572",
                                                    "lastChangeBy": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                                                },
                                                "interface-nb": {
                                                    "primitiveType": "format",
                                                    "name": "o:network:interface-nb",
                                                    "format": "interface-nb",
                                                    "type": "integer",
                                                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                                                    "example": "3",
                                                    "minimum": 0,
                                                    "maximum": 12,
                                                    "readOnly": false,
                                                    "writeOnly": false,
                                                    "nullable": false,
                                                    "sensitivity": 1,
                                                    "pii": "no",
                                                    "objectIdentifier": "no",
                                                    "lastUpdate": "1637941513",
                                                    "lastChangeBy": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                                                },
                                                "interface-name": {
                                                    "primitiveType": "format",
                                                    "name": "o:network:interface-name",
                                                    "format": "interface",
                                                    "type": "string",
                                                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                                                    "enum": [
                                                        "eth0",
                                                        "eth1",
                                                        "eth2",
                                                        "eth3"
                                                    ],
                                                    "example": "eth1",
                                                    "readOnly": false,
                                                    "writeOnly": false,
                                                    "nullable": false,
                                                    "sensitivity": 1,
                                                    "pii": "no",
                                                    "objectIdentifier": "no",
                                                    "lastUpdate": "1637289572",
                                                    "lastChangeBy": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                                                }
                                            }
                                        }
                                    ],
                                    "num": 2
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    },
                    "default": {
                        "$ref": "#/components/responses/Default"
                    }
                }
            },
            "post": {
                "operationId": "DataDictionaryCreate",
                "x-42c-actions": [
                    "DataDictionariesCreate"
                ],
                "summary": "Create a new Data Dictionary",
                "description": "This endpoint allows an admin user to create a new Data Dictionary the organization. If shared, this dictionary can be used by all users in the organization.",
                "tags": [
                    "DataDictionaries"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dataDictionaryPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The response returns the just created Data Dictionary informations.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataDictionaryMeta"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    },
                    "default": {
                        "$ref": "#/components/responses/Default"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "200Empty": {
                "description": "Invalid Input",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/empty"
                        }
                    }
                }
            },
            "400": {
                "description": "Invalid Input",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "401": {
                "description": "Invalid authorization",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "403": {
                "description": "Invalid authentication",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "404": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "406": {
                "description": "Does not exist",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "409": {
                "description": "Conflict",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "415": {
                "description": "Unsupported Media Type",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "429": {
                "description": "Too many request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            },
            "Default": {
                "description": "An unexpected error response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rpcStatus"
                        }
                    }
                }
            }
        },
        "schemas": {
            "dateFormatRFC3339": {
                "type": "string",
                "format": "RFC3339",
                "pattern": "^((?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(Z|[\\+-]\\d{2}:\\d{2})?)$"
            },
            "base64": {
                "type": "string",
                "format": "byte",
                "minLength": 0,
                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "regAuthEndpoint": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "regInvitationData": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "regRegisterData": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    }
                }
            },
            "regVerifyData": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "typesEmpty": {
                "type": "object"
            },
            "typesErrorOidc": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "err": {
                        "type": "string"
                    },
                    "errDesc": {
                        "type": "string"
                    }
                }
            },
            "typesMsg": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "typesRegisterSessionIdp": {
                "type": "object",
                "properties": {
                    "cookieState": {
                        "title": "mutually exclusive",
                        "type": "string"
                    },
                    "cookieInvitation": {
                        "type": "string"
                    },
                    "cookiePath": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "err": {
                        "$ref": "#/components/schemas/typesErrorOidc"
                    }
                }
            },
            "typesSessionIdp": {
                "type": "object",
                "properties": {
                    "cookieState": {
                        "title": "mutually exclusive",
                        "type": "string"
                    },
                    "cookiePath": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "err": {
                        "$ref": "#/components/schemas/typesErrorOidc"
                    }
                }
            },
            "typesSessionOAuth": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "typesSessionOidc": {
                "type": "object",
                "properties": {
                    "cookieSession": {
                        "type": "string"
                    },
                    "cookiePath": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "err": {
                        "$ref": "#/components/schemas/typesErrorOidc"
                    }
                }
            },
            "uint32": {
                "minimum": 0,
                "maximum": 4294967295,
                "type": "integer",
                "format": "uint32"
            },
            "uuid": {
                "description": "A universally unique identifier (UUID) is a 128-bit label used for information in computer systems.",
                "type": "string",
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "maxLength": 36,
                "minLength": 36,
                "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "uuidOrEmpty": {
                "description": "A universally unique identifier (UUID) is a 128-bit label used for information in computer systems.",
                "type": "string",
                "format": "uuid",
                "pattern": "^(?:[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})?$",
                "maxLength": 36,
                "minLength": 36,
                "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "dataDictionaryId": {
                "description": "Standard data dictionary or designated by UUID v4",
                "type": "string",
                "pattern": "^(?:standard|[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})$",
                "maxLength": 36,
                "minLength": 8,
                "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "uuidReadOnly": {
                "type": "string",
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "maxLength": 36,
                "minLength": 36,
                "readOnly": true
            },
            "PrefixedApiUuid": {
                "type": "string",
                "pattern": "^(?:(?:api)_)?[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "minLength": 36,
                "maxLength": 40,
                "example": "api_123e4567-e89b-12d3-a456-426614174000"
            },
            "PrefixedIdeUuid": {
                "type": "string",
                "pattern": "^(?:(?:ide)_)?[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "minLength": 36,
                "maxLength": 40,
                "example": "ide_123e4567-e89b-12d3-a456-426614174000"
            },
            "uuidNullable": {
                "description": "A universally unique identifier (UUID) is a 128-bit label used for information in computer systems.",
                "type": "string",
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "maxLength": 36,
                "minLength": 36,
                "example": "123e4567-e89b-12d3-a456-426614174000",
                "nullable": true
            },
            "PercentageValue": {
                "description": "A value expressed as percentages (%)",
                "type": "integer",
                "format": "percentage",
                "minimum": 0,
                "maximum": 100,
                "default": 0,
                "example": 20
            },
            "email": {
                "type": "string",
                "format": "email",
                "minLength": 2,
                "maxLength": 63,
                "pattern": "^[\\w\\-+.]+@((\\w\\-?)+\\.){1,4}[a-zA-Z0-9]{2,63}$"
            },
            "securityExecDashboard": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "organizationSummary",
                    "apiSqgAuditApproval",
                    "apiScoring",
                    "apiIssues",
                    "apiStatus"
                ],
                "properties": {
                    "organizationSummary": {
                        "type": "object",
                        "required": [
                            "apisNumber",
                            "collectionsNumber",
                            "teamsNumber",
                            "usersNumber"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "apisNumber": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 98
                            },
                            "collectionsNumber": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 12
                            },
                            "teamsNumber": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 12
                            },
                            "usersNumber": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": "72"
                            }
                        }
                    },
                    "apiSqgAuditApproval": {
                        "type": "object",
                        "required": [
                            "pass",
                            "fail"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "pass": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 80
                            },
                            "fail": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 18
                            }
                        }
                    },
                    "apiScoring": {
                        "type": "object",
                        "required": [
                            "veryHigh",
                            "high",
                            "medium",
                            "low",
                            "n/a"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "veryHigh": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 40
                            },
                            "high": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 32
                            },
                            "medium": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 18
                            },
                            "low": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 8
                            },
                            "n/a": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 8
                            }
                        }
                    },
                    "apiIssues": {
                        "type": "object",
                        "required": [
                            "info",
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "info": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 40
                            },
                            "low": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 32
                            },
                            "medium": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 18
                            },
                            "high": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 6
                            },
                            "critical": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 2
                            }
                        }
                    },
                    "apiStatus": {
                        "type": "object",
                        "required": [
                            "valid",
                            "structuralInvalid",
                            "semanticInvalid"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "valid": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 90
                            },
                            "structuralInvalid": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 2
                            },
                            "semanticInvalid": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 9223372036854775807,
                                "example": 6
                            }
                        }
                    }
                }
            },
            "CustomMessage": {
                "type": "object",
                "additionalProperties": false,
                "description": "This schema describes the parameters for the `custom welcome message` feature that is shown to all\nusers on the platform UI or in IDE extensions. Organization administrators can manage these parameters\nin the organization settings. The parameters include a description (text) and a style\n(primary, secondary, success, danger, warning, info, light, dark).\nThe description text is printed as a block at the top of the main panel of the Get Started page.",
                "required": [
                    "message",
                    "style"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[\\w\\._\\-+',:;.\\(\\) @\\[\\]\\/#=\\%!&?]{1,1024}$",
                        "minLength": 1,
                        "maxLength": 1024
                    },
                    "style": {
                        "type": "string",
                        "enum": [
                            "primary",
                            "secondary",
                            "success",
                            "danger",
                            "warning",
                            "info",
                            "light",
                            "dark"
                        ],
                        "default": "light",
                        "example": "light"
                    }
                }
            },
            "RSSFeed": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "enabled",
                    "url"
                ],
                "properties": {
                    "enabled": {
                        "description": "This parameter allows switching the RSS reader on the Getting started page completely off or back on again.",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "default": "yes"
                    },
                    "url": {
                        "type": "string",
                        "pattern": "^[\\w._\\-+,;.()@\\[\\]\\/\\:?&%|=]{15,255}$",
                        "minLength": 15,
                        "maxLength": 255,
                        "default": "https://apisecurity.io/feed/index.xml",
                        "example": "https://apisecurity.io/feed/index.xml"
                    }
                }
            },
            "ProtectionDirectoryUrl": {
                "type": "string",
                "nullable": true,
                "description": "Url can locate a directory or a file.",
                "pattern": "^https:\\/\\/[\\w\\.:-]+\\/api\\/v2\\/protections\\?path=^(?:o|42c|[tu]\\/([a-fA-F0-9]){8}-(?:(?1){4}-){3}(?1){12})(?:(?!\\.{2}|\\.\\/|\\/{2})[\\w\\-\\.\\/]){1,500}$",
                "example": "https://<platform_url>:8001/api/v2/protections?path=o:/path_1/path-2",
                "minLength": 40,
                "maxLength": 4000
            },
            "ProtectionDirectorySize": {
                "type": "integer",
                "format": "int64",
                "description": "Returns the size of the file in bytes, or 0 if this is a directory.",
                "example": 0
            },
            "ProtectionDirectoryType": {
                "type": "string",
                "description": "Returns the target's type, is the resource is a directory or a file?",
                "enum": [
                    "directory",
                    "file"
                ],
                "example": "directory"
            },
            "ProtectionDirectoryName": {
                "type": "string",
                "description": "A path can locate a directory or a file.",
                "pattern": "^(?:o|42c|[tu]\\/([a-fA-F0-9]){8}-(?:(?1){4}-){3}(?1){12})(?:(?!\\.{2}|\\.\\/|\\/{2})[\\w\\-\\.\\/]){1,500}$",
                "minLength": 2,
                "maxLength": 4000,
                "example": "o/path_1/path-2"
            },
            "ProtectionDirectory": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "path": {
                        "$ref": "#/components/schemas/ProtectionDirectoryName"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ProtectionDirectoryType"
                    },
                    "size": {
                        "$ref": "#/components/schemas/ProtectionDirectorySize"
                    },
                    "url": {
                        "$ref": "#/components/schemas/ProtectionDirectoryUrl"
                    },
                    "isEmpty": {
                        "type": "boolean"
                    }
                }
            },
            "ProtectionDirectoryList": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "protectionDirectories"
                ],
                "properties": {
                    "protectionDirectories": {
                        "title": "Directories summary.",
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionDirectory"
                        }
                    }
                }
            },
            "ProtectionDirectoryPayload": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "path"
                ],
                "properties": {
                    "path": {
                        "$ref": "#/components/schemas/ProtectionDirectoryName"
                    }
                }
            },
            "ProtectionTypeV2Payload": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "path": {
                        "$ref": "#/components/schemas/ProtectionDirectoryName"
                    },
                    "contents": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "ProtectionTypeListV2Payload": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "protectionTypes": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionTypeV2Payload"
                        }
                    }
                }
            },
            "ProtectionTypeV2": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "path": {
                        "$ref": "#/components/schemas/ProtectionDirectoryName"
                    },
                    "size": {
                        "$ref": "#/components/schemas/ProtectionDirectorySize"
                    },
                    "url": {
                        "$ref": "#/components/schemas/ProtectionDirectoryUrl"
                    },
                    "contents": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "dependencies": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionDirectoryUrl"
                        }
                    }
                }
            },
            "ProtectionTypeListV2": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "protectionTypes": {
                        "title": "XXX TODO : Len to avoid js to compute",
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionTypeV2"
                        }
                    }
                }
            },
            "NamingConvention": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "pattern",
                    "description",
                    "example"
                ],
                "properties": {
                    "pattern": {
                        "$ref": "#/components/schemas/Regex"
                    },
                    "description": {
                        "$ref": "#/components/schemas/NamingConventionDescription"
                    },
                    "example": {
                        "$ref": "#/components/schemas/ApiName"
                    }
                }
            },
            "CollectionOwnershipResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "The result of the owner user update: [true]: update success, [false]: update failed."
                    }
                }
            },
            "CollectionOwnership": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "collection": {
                        "$ref": "#/components/schemas/CollectionDescriptor"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/CollectionOwner"
                    }
                }
            },
            "CollectionOwnershipReport": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/CollectionOwnership"
                        }
                    }
                },
                "example": {
                    "num": 1,
                    "list": [
                        {
                            "collection": {
                                "id": "123e4567-e89b-12d3-a456-426614174000",
                                "name": "name",
                                "technicalName": "https://gitlab.com/myAccount/reponame",
                                "source": "gitlab",
                                "isShared": true,
                                "isSharedWrite": true
                            },
                            "owner": {
                                "id": "123e4567-e89b-12d3-a456-426614174000",
                                "lastname": "Doe",
                                "firstname": "John",
                                "username": "john.doe@42crunch.com"
                            }
                        }
                    ]
                }
            },
            "Entrypoints": {
                "title": "Entrypoints",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/Entrypoint"
                        }
                    }
                }
            },
            "GatewayConfigs": {
                "title": "GatewayConfigs",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/GatewayConfig"
                        }
                    }
                }
            },
            "SslClientProfiles": {
                "title": "SslClientProfiles",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/SslClientProfile"
                        }
                    }
                }
            },
            "PkiClientProfiles": {
                "title": "PkiClientProfiles",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/PkiClientProfile"
                        }
                    }
                }
            },
            "SslServerProfiles": {
                "title": "SslServerProfiles",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/SslServerProfile"
                        }
                    }
                }
            },
            "PkiServerProfiles": {
                "title": "PkiServerProfiles",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/PkiServerProfile"
                        }
                    }
                }
            },
            "Instances": {
                "title": "Instances",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/Instance"
                        }
                    }
                }
            },
            "Endpoints": {
                "title": "Endpoints",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/Endpoint"
                        }
                    }
                }
            },
            "Deployments": {
                "title": "Deployments",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/Deployment"
                        }
                    }
                }
            },
            "Deployment": {
                "title": "Deployment",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "instanceId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "apiCount": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "minimumBlockingLevel": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "createAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            },
            "Description": {
                "description": "A description which allows users to understand about the usage of the item.",
                "type": "string",
                "pattern": "^[\\w._\\-+',:;\\.() @\\[\\]\\/]{0,1024}$",
                "maxLength": 1024,
                "minLength": 1,
                "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas finibus condimentum ligula vel varius. Donec sed felis ullamcorper, pellentesque magna ac, blandit magna. Curabitur nisl diam, elementum at tincidunt ut, tristique eget elit. Donec vitae enim pretium, laoreet leo eu, consectetur enim."
            },
            "NamingConventionDescription": {
                "description": "A description which allows users to understand how the describe their APIs and collection names",
                "type": "string",
                "pattern": "^[\\w\\._\\-+',:;.\\(\\) @\\[\\]\\/#=\\%!&?]{1,1024}$",
                "maxLength": 1024,
                "minLength": 1
            },
            "EndpointSettings": {
                "title": "EndpointSettings",
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                    "timeout": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "connectionTimeout": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "keepAlive": {
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "preserveHost": {
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "addXFFHeaders": {
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "keepAliveTimeout": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    }
                }
            },
            "EntrypointSettings": {
                "title": "EntrypointSettings",
                "type": "object",
                "nullable": true,
                "additionalProperties": false,
                "properties": {
                    "additionalServerNames": {
                        "type": "array",
                        "maxItems": 20,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50
                        }
                    },
                    "ip": {
                        "$ref": "#/components/schemas/stringNullable"
                    },
                    "port": {
                        "$ref": "#/components/schemas/stringNullable"
                    },
                    "timeout": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "keepAlive": {
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "keepAliveTimeout": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "logLevel": {
                        "$ref": "#/components/schemas/stringNullable"
                    }
                }
            },
            "PkiClientProfileSettings": {
                "title": "PkiClientProfileSettings",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "CAType": {
                        "$ref": "#/components/schemas/CertType"
                    },
                    "CRLType": {
                        "$ref": "#/components/schemas/CertType"
                    },
                    "checkPeerName": {
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "checkPeerExpire": {
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "mtls": {
                        "$ref": "#/components/schemas/ClientProfileMtls"
                    }
                }
            },
            "CertType": {
                "type": "string",
                "description": "This parameter allows us to know where to find the certificate or use certificate contained in directory",
                "nullable": true,
                "enum": [
                    "none",
                    "file",
                    "directory"
                ]
            },
            "ClientProfileMtls": {
                "title": "ClientProfileMtls",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "certificateType": {
                        "$ref": "#/components/schemas/CertType"
                    },
                    "certificateChainType": {
                        "$ref": "#/components/schemas/CertType"
                    }
                }
            },
            "SslClientProfileSettings": {
                "title": "SslClientProfileSettings",
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                    "cipherSuite": {
                        "$ref": "#/components/schemas/CipherSuiteNullable"
                    },
                    "protocol": {
                        "$ref": "#/components/schemas/ProtocolNullable"
                    }
                }
            },
            "CipherSuiteNullable": {
                "nullable": true,
                "type": "string",
                "description": "This parameter allows to describe cipher suite to use to connect to Client/Server",
                "minLength": 0,
                "maxLength": 1024,
                "pattern": "^[\\w\\-+!:]{0,1024}$",
                "example": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:"
            },
            "ProtocolNullable": {
                "nullable": true,
                "type": "string",
                "description": "This parameter allows to describe protocol to use to connect to the client",
                "pattern": "^[\\w\\-+!:\\.]{0,1024}$",
                "minLength": 0,
                "maxLength": 1024,
                "example": "-ALL +TLSv1.2"
            },
            "SslServerProfileSettings": {
                "title": "SslServerProfileSettings",
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                    "protocol": {
                        "$ref": "#/components/schemas/ProtocolNullable"
                    },
                    "cipherSuite": {
                        "$ref": "#/components/schemas/CipherSuiteNullable"
                    },
                    "sessionTicket": {
                        "description": "This allows to enables/disable Session Tickets",
                        "$ref": "#/components/schemas/boolNullable"
                    }
                }
            },
            "PkiServerProfileSettings": {
                "title": "PkiServerProfileSettings",
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                    "ocspStaplingEnabled": {
                        "description": "this property allow to enable/disable OCSP Stapling",
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "mtls": {
                        "$ref": "#/components/schemas/ServerProfileMtls"
                    }
                }
            },
            "ServerProfileMtls": {
                "title": "ServerProfileMtls",
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                    "CAType": {
                        "$ref": "#/components/schemas/CertType"
                    },
                    "exposedCAType": {
                        "$ref": "#/components/schemas/CertType"
                    },
                    "CRLType": {
                        "$ref": "#/components/schemas/CertType"
                    },
                    "verify": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "verifyDepth": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "ocspEnabled": {
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "ocspDefaultResponder": {
                        "$ref": "#/components/schemas/stringNullable"
                    }
                }
            },
            "DeploymentBuild": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "firewallConfigurationId",
                    "isSuccess",
                    "createTime",
                    "startTime",
                    "endTime",
                    "reportFile"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "firewallConfigurationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "isSuccess": {
                        "description": "isSuccess is relevant when endTime is set",
                        "type": "boolean"
                    },
                    "createTime": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "startTime": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "endTime": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "reportFile": {
                        "description": "base64 encoded json report - relevant when endTime is set",
                        "type": "string",
                        "format": "byte",
                        "minLength": 0
                    }
                }
            },
            "Instance": {
                "title": "Instance",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "userId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "gatewayConfigId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    }
                }
            },
            "ObjectId": {
                "title": "ObjectId",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "GatewaySettings": {
                "title": "GatewaySettings",
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                    "mainLogLevel": {
                        "$ref": "#/components/schemas/stringNullable"
                    },
                    "maxClients": {
                        "$ref": "#/components/schemas/uint64Nullable"
                    }
                }
            },
            "GatewayConfig": {
                "title": "GatewayConfig",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ProtectionProfileDescription"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/GatewaySettings"
                    }
                }
            },
            "Entrypoint": {
                "title": "Entrypoint",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ProtectionProfileDescription"
                    },
                    "url": {
                        "$ref": "#/components/schemas/ProtectionProfileURL"
                    },
                    "sslProfileId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "pkiProfileId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "instanceId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/EntrypointSettings"
                    },
                    "endpointIds": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "IdsAndProxyPass": {
                "title": "IdsAndProxyPass",
                "type": "array",
                "maxItems": 9999,
                "items": {
                    "$ref": "#/components/schemas/IdAndProxyPass"
                }
            },
            "SecuredRevisionAndBasePathList": {
                "title": "SecuredRevisionAndBasePathList",
                "type": "array",
                "maxItems": 9999,
                "items": {
                    "$ref": "#/components/schemas/SecuredRevisionAndBasePath"
                }
            },
            "SecuredRevisionAndBasePath": {
                "title": "SecuredRevisionAndBasePath",
                "type": "object",
                "properties": {
                    "securedRevisionId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "basePath": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^\\/.*"
                    },
                    "basePathPrefixes": {
                    "nullable": true,
                        "type": "array",
                        "maxItems": 999,
                        "items": {
                            "$ref": "#/components/schemas/BasePathPrefix"
                        }
                    }
                }
            },
            "Endpoint": {
                "title": "Endpoint",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ProtectionProfileDescription"
                    },
                    "url": {
                        "$ref": "#/components/schemas/ProtectionProfileURL"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/EndpointSettings"
                    },
                    "sslProfileId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "pkiProfileId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "securedRevisionId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "SecuredBasePaths": {
                        "$ref": "#/components/schemas/SecuredRevisionAndBasePathList"
                    },
                    "basePathPrefixes": {
                        "type": "array",
                        "maxItems": 999,
                        "items": {
                            "$ref": "#/components/schemas/BasePathPrefix"
                        }
                    }
                },
                "additionalProperties": false
            },
            "PkiClientProfile": {
                "title": "PkiClientProfile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/PkiClientProfileSettings"
                    }
                }
            },
            "PlaceHolder": {
                "type": "string",
                "enum": [
                    "organization",
                    "team",
                    "user",
                    "community"
                ],
                "default": "organization",
                "example": "organization"
            },
            "PkiServerProfile": {
                "title": "PkiServerProfile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/PkiServerProfileSettings"
                    }
                }
            },
            "SslClientProfile": {
                "title": "SslClientProfile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/SslClientProfileSettings"
                    }
                }
            },
            "SslServerProfile": {
                "title": "SslServerProfile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/SslServerProfileSettings"
                    }
                }
            },
            "BasePathPrefix": {
                "title": "BasePathPrefix",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "in": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100
                    },
                    "out": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100
                    }
                }
            },
            "IdAndProxyPass": {
                "title": "IdAndProxyPass",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "basePathPrefixes": {
                        "type": "array",
                        "maxItems": 999,
                        "items": {
                            "$ref": "#/components/schemas/BasePathPrefix"
                        }
                    }
                }
            },
            "OwaspApiIssuesList": {
                "type": "array",
                "maxItems": 10,
                "uniqueItems": true,
                "items": {
                    "$ref": "#/components/schemas/OwaspApiIssue"
                }
            },
            "OwaspApiIssue": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "maximum": 10
            },
            "directivesAuditLegacy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "invalid_contract": {
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "default": "yes"
                    },
                    "minimum_assessment_score": {
                        "$ref": "#/components/schemas/int64Nullable"
                    },
                    "minimum_assessment_security_score": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 30
                    },
                    "minimum_assessment_data_validation_score": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 70
                    },
                    "subcategory_rules": {
                        "$ref": "#/components/schemas/SubcategoryRulesLegacy"
                    },
                    "issue_rules": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_@.:\\/]+",
                            "minLength": 1,
                            "maxLength": 128
                        },
                        "maxItems": 512
                    }
                }
            },
            "SubcategoryRulesLegacy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "security": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "authentication": {
                                "$ref": "#/components/schemas/SeverityLevel"
                            },
                            "authorization": {
                                "$ref": "#/components/schemas/SeverityLevel"
                            },
                            "transport": {
                                "$ref": "#/components/schemas/SeverityLevel"
                            }
                        }
                    },
                    "data_validation": {
                        "$ref": "#/components/schemas/dataValidationLegacy"
                    }
                }
            },
            "dataValidationLegacy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "parameters": {
                        "$ref": "#/components/schemas/SeverityLevel"
                    },
                    "response_headers": {
                        "$ref": "#/components/schemas/SeverityLevel"
                    },
                    "response_definition": {
                        "$ref": "#/components/schemas/SeverityLevel"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/SeverityLevel"
                    },
                    "paths": {
                        "$ref": "#/components/schemas/SeverityLevel"
                    }
                }
            },
            "sqgAuditLegacy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9-_@.+]+$",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "tagId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "categoryColor": {
                        "$ref": "#/components/schemas/HexadecimalColor"
                    },
                    "audit": {
                        "$ref": "#/components/schemas/directivesAuditLegacy"
                    }
                }
            },
            "sqgsAuditLegacy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/sqgAuditLegacy"
                        }
                    }
                }
            },
            "SqgsAudit": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "num",
                    "list"
                ],
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/SqgAudit"
                        }
                    }
                }
            },
            "SqgAudit": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "name",
                    "tagId",
                    "tagName",
                    "categoryName",
                    "categoryColor",
                    "directives"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuidReadOnly"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9-_@.+]+$",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "tagId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "categoryColor": {
                        "$ref": "#/components/schemas/HexadecimalColor"
                    },
                    "directives": {
                        "$ref": "#/components/schemas/SqgAuditDirectives"
                    }
                }
            },
            "SqgAuditDirectives": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rejectInvalidContract",
                    "minimumAssessmentScores",
                    "subcategoryRules",
                    "issueRules"
                ],
                "properties": {
                    "rejectInvalidContract": {
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "default": "yes"
                    },
                    "minimumAssessmentScores": {
                        "$ref": "#/components/schemas/MinimalAssessmentScore"
                    },
                    "subcategoryRules": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "security",
                            "dataValidation"
                        ],
                        "properties": {
                            "security": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "authentication": {
                                        "$ref": "#/components/schemas/SeverityLevel"
                                    },
                                    "authorization": {
                                        "$ref": "#/components/schemas/SeverityLevel"
                                    },
                                    "transport": {
                                        "$ref": "#/components/schemas/SeverityLevel"
                                    }
                                }
                            },
                            "dataValidation": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "parameters": {
                                        "$ref": "#/components/schemas/SeverityLevel"
                                    },
                                    "responseHeaders": {
                                        "$ref": "#/components/schemas/SeverityLevel"
                                    },
                                    "responseDefinition": {
                                        "$ref": "#/components/schemas/SeverityLevel"
                                    },
                                    "schema": {
                                        "$ref": "#/components/schemas/SeverityLevel"
                                    },
                                    "paths": {
                                        "$ref": "#/components/schemas/SeverityLevel"
                                    }
                                }
                            }
                        }
                    },
                    "issueRules": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_@.:\\/]+",
                            "minLength": 1,
                            "maxLength": 128
                        },
                        "maxItems": 512
                    }
                }
            },
            "MinimalAssessmentScore": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "global",
                    "security",
                    "dataValidation"
                ],
                "properties": {
                    "global": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 100,
                        "example": 70
                    },
                    "security": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 30,
                        "example": 20
                    },
                    "dataValidation": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 70,
                        "example": 50
                    }
                }
            },
            "SqgsScan": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "num",
                    "list"
                ],
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/SqgScan"
                        }
                    }
                }
            },
            "SqgScan": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "name",
                    "tagId",
                    "directives"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuidReadOnly"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9-_@.+]+$",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "tagId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "categoryColor": {
                        "$ref": "#/components/schemas/HexadecimalColor"
                    },
                    "directives": {
                        "$ref": "#/components/schemas/SqgScanDirectives"
                    }
                }
            },
            "SqgScanDirectives": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rejectOnOwaspApiIssuesFound",
                    "rejectSeverityThreshold",
                    "rejectUntestedOperation",
                    "rejectNonConformingErrorResponses",
                    "expectedHttpStatusRate",
                    "forbiddenTests"
                ],
                "nullable": true,
                "properties": {
                    "rejectOnOwaspApiIssuesFound": {
                        "$ref": "#/components/schemas/OwaspApiIssuesList"
                    },
                    "rejectSeverityThreshold": {
                        "$ref": "#/components/schemas/SeverityLevel"
                    },
                    "rejectUntestedOperation": {
                        "type": "boolean"
                    },
                    "rejectNonConformingErrorResponses": {
                        "type": "boolean"
                    },
                    "expectedHttpStatusRate": {
                        "$ref": "#/components/schemas/PercentageValue"
                    },
                    "forbiddenTests": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "pattern": "^[a-zA-Z0-9-]{1,100}$",
                            "description": "scan injection key"
                        }
                    }
                }
            },
            "SqgApprovalReport": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "acceptance",
                    "date",
                    "reportType",
                    "user",
                    "api",
                    "apiTags",
                    "sqgs",
                    "processingDetails"
                ],
                "properties": {
                    "acceptance": {
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "pattern": "^(yes|no)$",
                        "minLength": 2,
                        "maxLength": 3
                    },
                    "date": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "reportType": {
                        "type": "string",
                        "enum": [
                            "audit",
                            "scan",
                            "protection"
                        ],
                        "pattern": "^(audit|scan|protection)$",
                        "default": "audit",
                        "minLength": 4,
                        "maxLength": 10
                    },
                    "user": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "api": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "apiVersion": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "apiTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        },
                        "maxItems": 512
                    },
                    "sqgs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        },
                        "maxItems": 512
                    },
                    "processingDetails": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "blockingSqgId",
                                "blockingRules"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "blockingSqgId": {
                                    "$ref": "#/components/schemas/uuid"
                                },
                                "blockingRules": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[a-zA-Z0-9\\/:-]{1,100}$",
                                        "minLength": 1,
                                        "maxLength": 100
                                    },
                                    "maxItems": 512
                                }
                            }
                        },
                        "maxItems": 512
                    }
                }
            },
            "SeverityLevel": {
                "type": "string",
                "enum": [
                    "info",
                    "low",
                    "medium",
                    "high",
                    "critical"
                ],
                "default": "medium"
            },
            "UserTransferOwnershipBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "fromUserID": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "toUserID": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "CollectionTechnicalName": {
                "type": "string",
                "format": "collectionTechnicalName",
                "pattern": "^[\\w\\d ]{1,512}$",
                "minLength": 1,
                "maxLength": 512,
                "example": "collection-name v12_r123456"
            },
            "ApiAssignTagsBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/CategoryNameAndTagName"
                        }
                    }
                }
            },
            "CategoryAndTagDescription": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[\\w._\\-+',;\\.() @\\[\\]\\/]{0,1024}$",
                "description": "A technical description is text that describes an object or process in terms of its function, organization, parts and details.",
                "example": "This Category/tag will be used to group all banking production API. These APIs will inherit of strict security policies associated with a challenging Security Quality Gates acceptance criteria. Tags will use a format [apiName]-[envName]_[DMZRefence]."
            },
            "CategoryAndTagDescriptionOrEmpty": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 0,
                "pattern": "^(?:[\\w._\\-+',;\\.() @\\[\\]\\/]{0,1024})?$",
                "description": "A technical description is text that describes an object or process in terms of its function, organization, parts and details.",
                "example": "This Category/tag will be used to group all banking production API. These APIs will inherit of strict security policies associated with a challenging Security Quality Gates acceptance criteria. Tags will use a format [apiName]-[envName]_[DMZRefence]."
            },
            "CategoryName": {
                "description": "The name of the category. A category is associated to a tag as a key pair (i.e.: categoryName:tagName). It is possible to create several tag in a category. A category name CAN be composed using letters, integers and some special chars: -_@.+",
                "type": "string",
                "maxLength": 255,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9-_@.+]{1,255}$",
                "example": "production-v1.0.1_r123456+456789"
            },
            "CategoryNameOrEmpty": {
                "description": "The name of the category. A category is associated to a tag as a key pair (i.e.: categoryName:tagName). It is possible to create several tag in a category. A category name CAN be composed using letters, integers and some special chars: -_@.+",
                "type": "string",
                "maxLength": 255,
                "minLength": 1,
                "pattern": "^(?:[a-zA-Z0-9-_@.+]{1,255})?$",
                "example": "production-v1.0.1_r123456+456789"
            },
            "CategoryNameAndTagName": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    }
                }
            },
            "CategoryAndTag": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "categoryId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "categoryDescription": {
                        "$ref": "#/components/schemas/CategoryAndTagDescription"
                    },
                    "tagId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "tagDescription": {
                        "$ref": "#/components/schemas/CategoryAndTagDescription"
                    },
                    "color": {
                        "$ref": "#/components/schemas/HexadecimalColor"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "isFreeForm": {
                        "type": "boolean"
                    },
                    "isExclusive": {
                        "type": "boolean"
                    },
                    "dependencies": {
                        "$ref": "#/components/schemas/TagDependencies"
                    }
                }
            },
            "TagWithDependencies": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/CategoryAndTagDescriptionOrEmpty"
                    },
                    "dependencies": {
                        "$ref": "#/components/schemas/TagDependencies"
                    }
                }
            },
            "TagDependencies": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "auditRuleId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "scanRuleId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "protectionRuleId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "sqgId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    }
                }
            },
            "CategoryAndTagList": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/CategoryAndTag"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    }
                }
            },
            "ScanRule": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "description": "Name of the scan rule (unique)",
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "description": {
                        "description": "Scan rule description",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2048,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,2048}$"
                    },
                    "creationDate": {
                        "description": "Unix time when the rule has been created",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "effectiveDate": {
                        "description": "Unix time when the rule takes effect",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "expirationDate": {
                        "description": "Unix time when the rule expires, must be greater than effectiveDate",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "creator": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "directives": {
                        "$ref": "#/components/schemas/ScanDirectives"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryNameOrEmpty"
                    },
                    "categoryColor": {
                        "$ref": "#/components/schemas/HexadecimalColorOrEmpty"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagNameOrEmpty"
                    }
                }
            },
            "ScanRules": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/ScanRule"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "CreateScanRuleBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "description": "Name of the scan rule (must be unique)",
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "description": {
                        "description": "Scan rule description",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2048,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,2048}$"
                    },
                    "effectiveDate": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "expirationDate": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "directives": {
                        "$ref": "#/components/schemas/ScanDirectives"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    }
                }
            },
            "ScanDirectives": {
                "type": "object",
                "additionalProperties": false,
                "description": "Directives how to change the behavior of the scan",
                "properties": {
                    "skippedKeys": {
                        "type": "array",
                        "description": "An array of keys of the tests to be skipped during the scan",
                        "maxItems": 9999,
                        "items": {
                            "type": "string"
                        }
                    },
                    "skipHttpMethods": {
                        "type": "array",
                        "description": "An array of HTTP methods to be skipped during the scan",
                        "maxItems": 9999,
                        "items": {
                            "type": "string"
                        }
                    },
                    "responseAnalysedBehaviour": {
                        "type": "object",
                        "description": "A map of keys of the tests where to modify how the scan analyzes the responses from the API",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ScanResponseAnalysedBehaviour"
                        }
                    },
                    "happyPathAnalysedBehaviour": {
                        "$ref": "#/components/schemas/ScanResponseAnalysedBehaviour"
                    },
                    "customHeaders": {
                        "type": "object",
                        "description": "A map (<string,string>) of headers to be sent during the scan. The key represents a header and the value its corresponding value. Dynamic variables are allowed. Environment variables can only be used when running Conformance Scan on-premises.",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "mandatoryCategory": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ScanResponseAnalysedBehaviour": {
                "type": "object",
                "description": "Change how the scan analyzes API responses",
                "properties": {
                    "errorHTTPStatusExpected": {
                        "type": "array",
                        "description": "An array of error HTTP status codes (300-599, set '*' for a wildcard) that are acceptable.",
                        "maxItems": 9999,
                        "items": {
                            "type": "string",
                            "minLength": 0,
                            "maxLength": 4294967295
                        }
                    },
                    "successHTTPStatusExpected": {
                        "type": "array",
                        "description": "An array of successful HTTP status codes (100-299, set '*' for a wildcard) that are acceptable.",
                        "maxItems": 9999,
                        "items": {
                            "type": "string",
                            "minLength": 0,
                            "maxLength": 4294967295
                        }
                    },
                    "skipHeaderAssessment": {
                        "description": "Switch off assessing headers in the API responses",
                        "type": "boolean",
                        "default": false
                    },
                    "skipBodyAssessment": {
                        "description": "Switch off assessing the body of the API response",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "AuditRules": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/AuditRule"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "AuditRule": {
                "type": "object",
                "description": "Directives how to change the behavior of the audit",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "description": "Name of the audit rule (must be unique)",
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "description": {
                        "description": "Audit rule description",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2048,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,2048}$"
                    },
                    "creationDate": {
                        "description": "Unix time when the rule has been created",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "effectiveDate": {
                        "description": "Unix time when the rule takes effect",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "expirationDate": {
                        "description": "Unix time when the rule expires, must be greater than effectiveDate",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "creator": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "directives": {
                        "$ref": "#/components/schemas/AuditDirectives"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryNameOrEmpty"
                    },
                    "categoryColor": {
                        "$ref": "#/components/schemas/HexadecimalColorOrEmpty"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagNameOrEmpty"
                    }
                },
                "additionalProperties": false
            },
            "CreateAuditRuleBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "description": "Name of the audit rule (must be unique)",
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "description": {
                        "description": "Audit rule description",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2048,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,2048}$"
                    },
                    "effectiveDate": {
                        "description": "Unix time when the rule takes effect, must be greater than current time. If omitted, defaults to current time and the rule takes effect immediately",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "expirationDate": {
                        "description": "Unix time when the rule expires, must be greater than effectiveDate",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "directives": {
                        "$ref": "#/components/schemas/AuditDirectives"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    }
                }
            },
            "UpdateAuditRuleBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "description": {
                        "description": "Audit rule description",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2048,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,2048}$"
                    },
                    "effectiveDate": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "expirationDate": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "creatorID": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "directives": {
                        "$ref": "#/components/schemas/AuditDirectives"
                    }
                }
            },
            "AuditDirectives": {
                "type": "object",
                "description": "Directives how to change the behavior of the audit",
                "additionalProperties": false,
                "properties": {
                    "x-42c-skipIssues": {
                        "type": "array",
                        "description": "An array of issue IDs (keys) to be skipped in the audit. You can find issue IDs either from your existing audit reports or in the API Security Encyclopedia online.",
                        "minItems": 0,
                        "maxItems": 999999999,
                        "items": {
                            "type": "string"
                        }
                    },
                    "x-42c-sensitivity": {
                        "type": "integer",
                        "description": "The sensitivity of the API operation (1-5, with 1 meaning 'not sensitive'). If not set, defaults to 3 (medium).",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5,
                        "default": 3
                    },
                    "x-42c-output": {
                        "description": "How much weight (in percentage) the output (responses) of API operations gets when calculating the audit score. Must be used with 'x-42c-weight-input' and they must total to 100%.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 20
                    },
                    "x-42c-input": {
                        "description": "How much weight (in percentage) the input (parameters and body) for API operations gets when calculating the audit score. Must be used together with 'x-42c-weight-output' and they must total to 100%.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 80
                    },
                    "x-42c-weight-parameters": {
                        "description": "How much weight (in percentage) the parameters for API operations get when calculating the audit score. Must be used together with 'x-42c-weight-requestBody' and they must total to 100%.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 50
                    },
                    "x-42c-weight-requestBody": {
                        "description": "How much weight (in percentage) the request bodies for API operations get when calculating the audit score. Must be used together with 'x-42c-weight-parameters' and they must total to 100%.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 50
                    },
                    "x-42c-no-authentication": {
                        "description": "Switch off authentication checks in the audit. Can be applied to a particular operation, or on the global level in the API definition to omit the checks for all operations.",
                        "type": "boolean",
                        "default": false
                    },
                    "x-42c-weight-success": {
                        "description": "How much weight (in percentage) API responses for successes get when calculating the audit score. Must be used together with 'x-42c-weight-fail' and they must total to 100%",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 70
                    },
                    "x-42c-weight-fail": {
                        "description": "How much weight (in percentage) API responses for failures get when calculating the audit score. Must be used together with 'x-42c-weight-success' and they must total to 100%.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 30
                    },
                    "x-42c-weight-headers": {
                        "description": "How much weight (in percentage) headers in API responses get when calculating the audit score. Must be used together with 'x-42c-weight-content' and they must total to 100%.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 20
                    },
                    "x-42c-weight-content": {
                        "description": "How much weight (in percentage) the content of API responses gets when calculating the audit score. Must be used together with 'x-42c-weight-headers' and they must total to 100%.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 80
                    },
                    "x-42c-sensitivity-data": {
                        "type": "integer",
                        "description": "The sensitivity of the data that the schema or parameter (OASv2 only) object in question includes (1-5, with 1 meaning 'not sensitive'",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5,
                        "default": 3
                    },
                    "x-42c-mandatoryCategory": {
                        "type": "array",
                        "description": "An array of tag category defined as mandatory in the organization which must be applied to the API",
                        "maxItems": 9999,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "TagCategoryAssignTagBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "newCategoryName": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "tagName": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                        "maxLength": 36,
                        "minLength": 36
                    }
                }
            },
            "ObjectIds": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "ids": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    }
                }
            },
            "UpdateScanRuleBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "description": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$"
                    },
                    "effectiveDate": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "expirationDate": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "creatorID": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "tagName": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "directives": {
                        "$ref": "#/components/schemas/ScanDirectives"
                    }
                }
            },
            "ApiRevokeTagBody": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "name": {
                        "$ref": "#/components/schemas/TagName"
                    }
                }
            },
            "ApiAssignTagBody": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "categoryName": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "name": {
                        "$ref": "#/components/schemas/TagName"
                    }
                }
            },
            "TagCreateBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/CategoryAndTagDescription"
                    }
                }
            },
            "TagCategoryListResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/TagCategory"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9999
                    }
                }
            },
            "OnlyAdminCanTag": {
                "type": "boolean",
                "default": true,
                "example": "false",
                "description": "This parameter allows to protect a category tag contents. If set to true, only admin users can assign or unassign the tags in the APIs. In this case, it is no more possible for regular users to assign or unassign a tag to an API. This feature can be used to assign a required Security Quality Gates configuration or a customization rules."
            },
            "TagCategory": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/CategoryAndTagDescriptionOrEmpty"
                    },
                    "color": {
                        "$ref": "#/components/schemas/HexadecimalColor"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "isFreeForm": {
                        "type": "boolean"
                    },
                    "isExclusive": {
                        "type": "boolean"
                    },
                    "onlyAdminCanTag": {
                        "$ref": "#/components/schemas/OnlyAdminCanTag"
                    }
                }
            },
            "TagCategoryCreateBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/CategoryName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/CategoryAndTagDescription"
                    },
                    "color": {
                        "$ref": "#/components/schemas/HexadecimalColor"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "isFreeForm": {
                        "type": "boolean"
                    },
                    "isExclusive": {
                        "type": "boolean"
                    },
                    "onlyAdminCanTag": {
                        "$ref": "#/components/schemas/OnlyAdminCanTag"
                    }
                }
            },
            "UserReadByEmailBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/email"
                    }
                }
            },
            "ListUserByTeamRes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/UserProfile"
                        }
                    },
                    "num": {
                        "minimum": 0,
                        "maximum": 4294967295,
                        "type": "integer",
                        "format": "uint32"
                    }
                }
            },
            "UserItem": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "TODO"
                    },
                    "type": {
                        "$ref": "#/components/schemas/UserItemType"
                    }
                }
            },
            "UserItemType": {
                "type": "string",
                "enum": [
                    "UnknownUserItemType",
                    "CollectionUserItemType",
                    "ApiUserItemType",
                    "TeamUserItemType",
                    "ScanRuleItemType",
                    "AuditRuleItemType"
                ],
                "default": "UnknownUserItemType"
            },
            "UserItems": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/UserItem"
                        }
                    },
                    "num": {
                        "minimum": 0,
                        "maximum": 4294967295,
                        "type": "integer",
                        "format": "uint32"
                    }
                }
            },
            "UserProfiles": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/UserProfile"
                        }
                    },
                    "num": {
                        "minimum": 0,
                        "maximum": 4294967295,
                        "type": "integer",
                        "format": "uint32"
                    }
                }
            },
            "TeamListRes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "minimum": 0,
                        "maximum": 999999999999,
                        "type": "integer",
                        "format": "uint32"
                    },
                    "teams": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/Team"
                        }
                    }
                }
            },
            "TeamListByUserRes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "teams": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/Team"
                        }
                    }
                }
            },
            "TeamRemoveUsersBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "users": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "TeamAddUsersBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "maintainers": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    },
                    "members": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "TeamUpdateBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "teamLeader": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "TeamCreateBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "teamLeader": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "maintainers": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    },
                    "members": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "TechnicalName": {
                "type": "string",
                "format": "collectionTechnicalName",
                "minLength": 1,
                "maxLength": 512,
                "pattern": "^[a-zA-Z0-9 \\[\\]\\(\\)+\\-_./:@]{0,512}$"
            },
            "CollectionReadByTechnicalNameBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "technicalName": {
                        "type": "string",
                        "format": "collectionTechnicalName",
                        "minLength": 1,
                        "maxLength": 512
                    }
                }
            },
            "ApiReadByTechnicalNameBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "technicalName": {
                        "type": "string"
                    }
                }
            },
            "ApiSearchResp": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "apis": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/ApiSearchObject"
                        }
                    }
                }
            },
            "ApiSearchObject": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "nameCollection",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z0-9 -_.]{0,255}$"
                    },
                    "ownerId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "ownerEmail": {
                        "$ref": "#/components/schemas/email"
                    },
                    "collectionId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "collectionName": {
                        "type": "string",
                        "format": "nameCollection",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z0-9 -_.]{0,255}$"
                    }
                }
            },
            "UserCollaborationDeleteBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userIds": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "string"
                        },
                        "title": "user collaboration delete body"
                    }
                }
            },
            "UserCredentialsDeleteBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userIds": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "string"
                        },
                        "title": "user collaboration delete body"
                    }
                }
            },
            "UserCollaborationCreateBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "users": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/UserCollaboration"
                        }
                    }
                }
            },
            "UserCollaborationUpdateBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "users": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/UserCollaboration"
                        }
                    }
                }
            },
            "UserCollaboration": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                }
            },
            "ListUserByCollectionRes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/UserProfileAndPermissions"
                        }
                    },
                    "num": {
                        "minimum": 0,
                        "maximum": 4294967295,
                        "type": "integer",
                        "format": "uint32"
                    }
                }
            },
            "UserProfileAndPermissions": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "firstname": {
                        "type": "string",
                        "format": "nameHuman",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[a-zA-Z\\s]{1,50}$"
                    },
                    "lastname": {
                        "type": "string",
                        "format": "nameHuman",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[a-zA-Z\\s]{1,50}$"
                    },
                    "username": {
                        "$ref": "#/components/schemas/email"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                }
            },
            "UserForCredentials": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "firstname": {
                        "type": "string",
                        "format": "nameHuman",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[a-zA-Z\\s]{1,50}$"
                    },
                    "lastname": {
                        "type": "string",
                        "format": "nameHuman",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[a-zA-Z\\s]{1,50}$"
                    },
                    "username": {
                        "$ref": "#/components/schemas/email"
                    }
                }
            },
            "UsersByCredentials": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                }
            },
            "UserListByVault": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "readOnly": true,
                        "minimum": 0,
                        "maximum": 4294967295,
                        "type": "integer",
                        "format": "uint32"
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "TeamListByVault": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "TeamWithCredentialsPermissions": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "team": {
                        "$ref": "#/components/schemas/Team"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                }
            },
            "TeamCredentialsDeleteBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "teamIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "TeamListByCollectionRes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "teams": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/TeamWithCollPermissions"
                        }
                    }
                }
            },
            "TeamWithCollPermissions": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "team": {
                        "$ref": "#/components/schemas/Team"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                }
            },
            "TeamCreateRes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "Team": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    },
                    "leader": {
                        "$ref": "#/components/schemas/UserProfile"
                    }
                }
            },
            "TeamNameNullable": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "pattern": "^[a-zA-Z-_@.+]+$",
                "example": "Banking"
            },
            "UserProfile": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "firstname": {
                        "type": "string",
                        "format": "nameHuman",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[a-zA-Z\\s]{1,50}$"
                    },
                    "lastname": {
                        "type": "string",
                        "format": "nameHuman",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[a-zA-Z\\s]{1,50}$"
                    },
                    "username": {
                        "$ref": "#/components/schemas/email"
                    }
                }
            },
            "TeamCollaborationDeleteBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "teamIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "TeamCollaborationCreateBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "teams": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/TeamCollaboration"
                        }
                    }
                }
            },
            "TeamCollaboration": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "read": {
                        "description": "Has read access to the team",
                        "type": "boolean",
                        "default": false
                    },
                    "write": {
                        "type": "boolean"
                    }
                }
            },
            "TeamCollaborationUpdateBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "teams": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/TeamCollaboration"
                        }
                    }
                }
            },
            "LogSearchEngine": {
                "type": "string",
                "default": "SCAN",
                "enum": [
                    "SCAN",
                    "ASSESS",
                    "PROTECT"
                ]
            },
            "ReportFormat": {
                "type": "string",
                "default": "JSON",
                "enum": [
                    "JSON",
                    "PDF",
                    "HTML"
                ]
            },
            "ReportEnc": {
                "type": "string",
                "default": "base64",
                "enum": [
                    "base64"
                ]
            },
            "SummaryFilterSummaryType": {
                "type": "string",
                "default": "SummaryUnkownType",
                "enum": [
                    "SummaryUnkownType",
                    "Assessment",
                    "Scan",
                    "Protection"
                ]
            },
            "Api": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "desc": {
                        "$ref": "#/components/schemas/ApiDescriptor"
                    },
                    "revision": {
                        "$ref": "#/components/schemas/RevisionOasDescriptor"
                    },
                    "assessment": {
                        "$ref": "#/components/schemas/AssessSummary"
                    },
                    "scan": {
                        "$ref": "#/components/schemas/ScanSummary"
                    },
                    "protection": {
                        "$ref": "#/components/schemas/ProtectionSummary"
                    },
                    "tags": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/CategoryAndTag"
                        }
                    }
                }
            },
            "ApiName": {
                "type": "string",
                "format": "name50",
                "minLength": 1,
                "maxLength": 50,
                "pattern": "^[\\w:-]{1,50}$"
            },
            "Regex": {
                "type": "string",
                "format": "regex",
                "minLength": 2,
                "maxLength": 255,
                "pattern": "^\\^[a-zA-Z0-9 \\-_.\\^\\*\\$()\\[\\]?\\\\{},|:]{2,255}\\$$"
            },
        "ApiCreateRequestBody": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
            "cid": {
                        "$ref": "#/components/schemas/uuid"
            },
            "name": {
                        "type": "string",
                        "format": "name50",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[\\w:-]{1,50}$"
            },
                    "technicalName": {
                        "type": "string",
                        "format": "technicalName",
                        "minLength": 1,
                        "maxLength": 512
                    },
                    "specfile": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "yaml": {
                        "type": "boolean"
                    },
            "tags": {
            "type": "array",
            "maxItems": 999,
            "items": {
                "$ref": "#/components/schemas/uuid" 
            }
            }
        }
        },
        "ApiUpdateRequestBody": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
            "cid": {
                        "$ref": "#/components/schemas/uuid"
            },
            "name": {
                        "type": "string",
                        "format": "name50",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[\\w:-]{1,50}$"
            },
                    "technicalName": {
                        "type": "string",
                        "format": "technicalName",
                        "minLength": 1,
                        "maxLength": 512
                    },
            "tags": {
                "$ref": "#/components/schemas/arrayUUID" 
            }
        }
        },
            "ApiDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "cid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "name50",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[\\w:-]{1,50}$"
                    },
                    "technicalName": {
                        "type": "string",
                        "format": "technicalName",
                        "minLength": 1,
                        "maxLength": 512
                    },
                    "specfile": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "yaml": {
                        "type": "boolean"
                    },
                    "revisionOasCounter": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "lock": {
                        "type": "boolean"
                    },
                    "lockReason": {
                        "type": "string"
                    }
                }
            },
            "ApiList": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/Api"
                        }
                    }
                }
            },
            "AssessSummary": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "isProcessed": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "string"
                    },
                    "error": {
                        "type": "boolean"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        }
                    },
                    "isValid": {
                        "type": "boolean"
                    },
                    "grade": {
                        "type": "number",
                        "format": "double"
                    },
                    "numErrors": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numInfos": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numLows": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numMediums": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numHighs": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numCriticals": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "oasVersion": {
                        "type": "string"
                    },
                    "releasable": {
                        "type": "boolean"
                    },
                    "sqgPass": {
                        "type": "boolean"
                    },
                    "auditVersion": {
                        "description": "audit engine version",
                        "type": "string"
                    }
                }
            },
            "AssessmentLog": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "state": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "oasVersion": {
                        "type": "string"
                    },
                    "assessmentDate": {
                        "type": "string"
                    },
                    "isValid": {
                        "type": "boolean"
                    },
                    "organizationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "collectionId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "apiId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "revisionId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "scoreSecurity": {
                        "type": "number",
                        "format": "double"
                    },
                    "scoreData": {
                        "type": "number",
                        "format": "double"
                    },
                    "numPaths": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numOperations": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numParameters": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numSchemas": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numRequestBodies": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "criticality": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numValidationIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numSemanticIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numWarningIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numDataInfoIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numSecurityInfoIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numDataLowIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numSecurityLowIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numDataMediumIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numSecurityMediumIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numDataHighIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numSecurityHighIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numDataCriticalIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numSecurityCriticalIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "issues": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "globalScore": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "AssessmentLogs": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/AssessmentLog"
                        }
                    }
                }
            },
            "AssessmentSummaryDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "diffId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "notfications": {
                        "$ref": "#/components/schemas/arrayString"
                    }
                }
            },
            "Backend": {
                "title": "this service handle backends",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "description": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$"
                    },
                    "outboundSettings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tagIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    },
                    "tag": {
                        "title": "Search criteria",
                        "type": "string"
                    }
                },
                "description": "------------------------\nCRUD call to API service\n------------------------"
            },
            "BackendListResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/Backend"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    }
                }
            },
            "ClientDetails": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "regid": {
                        "type": "string"
                    },
                    "registration_time": {
                        "type": "string"
                    },
                    "last_seen": {
                        "type": "string"
                    },
                    "env_vars": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "env_props": {
                        "$ref": "#/components/schemas/EnvProps"
                    },
                    "stats": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TrafficStatistics"
                        }
                    },
                    "config_events": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ConfigurationReport"
                        }
                    }
                }
            },
            "CollectionSearchRes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/CollectionReadCompact"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uin32",
                        "minimum": 0,
                        "maximum": 999999999999
                    }
                }
            },
            "ProtectionProfileName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "pattern": "^[\\w\\-_]{1,255}$",
                "description": "This parameter allows to define the name of the Endpoint",
                "example": "preprod_aws-v2"
            },
            "ProtectionProfileDescription": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "pattern": "^[\\w\\-_\\. ]{1,255}$",
                "description": "This parameter allows to define the description of the Endpoint",
                "example": "my preprod_aws-v2 Endpoint."
            },
            "ProtectionProfileURL": {
                "type": "string",
                "minLength": 1,
                "maxLength": 512,
                "pattern": "^[\\w._\\-+',;.() @\\[\\]\\/:?&%|#=]{0,255}$",
                "description": "This parameter describes URL of the unerlying protected API. It cannot be longer than 512 because of the Apache limitation.",
                "example": "https://42crunch.com:443/myapi-path"
            },
            "CollectionName": {
                "type": "string",
                "format": "collection-name",
                "minLength": 1,
                "maxLength": 50,
                "pattern": "^[\\w:-]{1,50}$"
            },
            "CollectionReadCompact": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "technicalName": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "createDate": {
                        "type": "string"
                    }
                }
            },
            "HexadecimalColor": {
                "description": "Hexadecimal color codes are one type of HTML color code (hexadecimal color or hex). It’s a human-friendly representation of values in binary code. Hex color codes start with a pound sign or hashtag (#) and are followed by six letters and/or numbers.",
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^#[a-fA-F0-9]{6}$",
                "example": "#123456"
            },
            "HexadecimalColorOrEmpty": {
                "description": "Hexadecimal color codes are one type of HTML color code (hexadecimal color or hex). It’s a human-friendly representation of values in binary code. Hex color codes start with a pound sign or hashtag (#) and are followed by six letters and/or numbers.",
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^(?:#[a-fA-F0-9]{6})?$",
                "example": "#123456"
            },
            "Collection": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "desc": {
                        "$ref": "#/components/schemas/CollectionDescriptor"
                    },
                    "summary": {
                        "$ref": "#/components/schemas/CollectionSummary"
                    },
                    "protection": {
                        "$ref": "#/components/schemas/ProtectionSummary"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/CollectionOwner"
                    },
                    "userCounter": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "teamCounter": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    }
                }
            },
            "CollectionDescriptor": {
                "title": "Collection",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "name50",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[\\w:-]{1,50}$"
                    },
                    "technicalName": {
                        "type": "string",
                        "format": "collectionTechnicalName",
                        "minLength": 1,
                        "maxLength": 512
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "default",
                            "github",
                            "gitlab",
                            "bitbucket",
                            "azure",
                            "jenkins",
                            "bamboo",
                            "sonarqube"
                        ],
                        "default": "default"
                    },
                    "isShared": {
                        "type": "boolean"
                    },
                    "isSharedWrite": {
                        "type": "boolean"
                    }
                }
            },
            "CollectionListBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 999999999999
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/Collection"
                        }
                    }
                }
            },
            "CollectionOwner": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "username": {
                        "$ref": "#/components/schemas/email"
                    },
                    "firstname": {
                        "type": "string",
                        "format": "nameHuman",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[a-zA-Z\\s]{1,50}$"
                    },
                    "lastname": {
                        "type": "string",
                        "format": "nameHuman",
                        "minLength": 1,
                        "maxLength": 50,
                        "pattern": "^[a-zA-Z\\s]{1,50}$"
                    }
                }
            },
            "CollectionSummary": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "org": {
                        "$ref": "#/components/schemas/OrgDescriptor"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    },
                    "writeApis": {
                        "type": "boolean"
                    },
                    "apis": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "ConfigurationReport": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "timestamp": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "log": {
                        "type": "string"
                    }
                }
            },
            "CreateMailInvitation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "users": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/UserMailInvitation"
                        }
                    },
                    "expirationTime": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "userFlags": {
                        "$ref": "#/components/schemas/UserFlags"
                    }
                }
            },
            "CreateOnFlyInvitation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "expirationTime": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ssoDomain": {
                        "type": "string"
                    },
                    "userFlags": {
                        "$ref": "#/components/schemas/UserFlags"
                    }
                }
            },
            "CreatedOnFlyInvitation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
            },
            "Timestamp": {
                "description": "Unix timestamp in seconds",
                "type": "integer",
                "minimum": 0,
                "maximum": 3100000000,
                "format": "int64",
                "example": "1637949572"
            },
            "TimestampReadOnly": {
                "description": "Unix timestamp in seconds",
                "readOnly": true,
                "type": "integer",
                "minimum": 0,
                "maximum": 3100000000,
                "format": "int64",
                "example": "1637949572"
            },
            "DeleteMailInvitation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/email"
                    }
                }
            },
            "GuardianConfiguration": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "descr": {
                        "$ref": "#/components/schemas/GuardianConfigurationDescriptor"
                    },
                    "customGuardianConf": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "GuardianConfigurationDescriptor": {
                "title": "this service handle guardian configuration",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "description": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tagIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    },
                    "tag": {
                        "title": "Search criteria",
                        "type": "string"
                    }
                },
                "description": "------------------------\nCRUD call to API service\n------------------------"
            },
            "GuardianConfigurationDescriptorList": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/GuardianConfigurationDescriptor"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "HttpBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "contentType": {
                        "type": "string",
                        "description": "The HTTP Content-Type header value specifying the content type of the body."
                    },
                    "data": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "extensions": {
                        "type": "array",
                        "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs.",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                },
                "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody) returns\n      (google.protobuf.Empty);\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged."
            },
            "LinkSecuredOasBackend": {
                "title": "this service handle vhosts",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "securedRevisionOasId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "backendId": {
                        "$ref": "#/components/schemas/uuid"
                    }
                },
                "description": "------------------------\nCRUD call to API service\n------------------------"
            },
            "Log": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "indexed": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "private": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "tokenId": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "LogFilter": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "max": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "showAll": {
                        "type": "boolean"
                    }
                }
            },
            "LogList": {
                "title": "Objects related to retreive logs",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        }
                    }
                }
            },
            "LogSearch": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "oid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/LogSearchEngine"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/LogFilter"
                    }
                }
            },
            "LogStats": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/LogStatsMetric"
                        }
                    },
                    "count": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "LogStatsInfo": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "LogStatsMetric": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/LogStatsInfo"
                        }
                    }
                }
            },
            "MailInvitation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/email"
                    },
                    "createDate": {
                        "type": "string"
                    },
                    "expireDate": {
                        "type": "string"
                    },
                    "sso": {
                        "type": "boolean"
                    },
                    "userFlags": {
                        "$ref": "#/components/schemas/UserFlags"
                    }
                }
            },
            "MailInvitationCreated": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "emails": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/email"
                        }
                    },
                    "createDate": {
                        "type": "string"
                    },
                    "expireDate": {
                        "type": "string"
                    }
                }
            },
            "MailInvitationListBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/MailInvitation"
                        }
                    }
                }
            },
            "Notification": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "channelId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "onEvent": {
                        "$ref": "#/components/schemas/NotificationOnEvent"
                    },
                    "tags": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Notifications": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/Notification"
                        }
                    }
                }
            },
            "OrgDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "OrgUserFlags": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "selfReg": {
                        "$ref": "#/components/schemas/UserFlags"
                    }
                }
            },
            "Organization": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/OrganizationMData"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/OrganizationStats"
                    },
                    "limits": {
                        "$ref": "#/components/schemas/OrganizationLimits"
                    },
                    "constraints": {
                        "$ref": "#/components/schemas/OrganizationConstraints"
                    },
                    "invitation": {
                        "$ref": "#/components/schemas/OrganizationInvitation"
                    },
                    "props": {
                        "$ref": "#/components/schemas/OrganizationProperties"
                    },
                    "domains": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "string"
                        }
                    },
                    "userFlags": {
                        "$ref": "#/components/schemas/OrgUserFlags"
                    },
                    "community": {
                        "type": "boolean"
                    }
                }
            },
            "OrganizationConstraints": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "assessmentFileId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "scanFileId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "protectionFileId": {
                        "type": "string"
                    }
                }
            },
            "OrganizationInvitation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "ssoInvitation": {
                        "type": "boolean"
                    },
                    "mailInvitation": {
                        "type": "boolean"
                    },
                    "onFlyInvitation": {
                        "type": "boolean"
                    },
                    "ssoSelfRegistration": {
                        "type": "boolean"
                    },
                    "adminInvitationOnly": {
                        "type": "boolean"
                    }
                }
            },
            "OrganizationProperties": {
                "title": "Organization properties",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "exposeSQG": {
                        "type": "boolean"
                    }
                }
            },
            "OrganizationLimits": {
                "title": "Organization limits message",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "numUser": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numApi": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numFw": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    }
                }
            },
            "OrganizationMData": {
                "title": "Same as admin object",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    }
                }
            },
            "OrganizationStats": {
                "title": "Organizations statistiques message",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "numUser": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numApi": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numAssess": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numScan": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numProt": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "numFw": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "PlatformInformation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "User": {
                        "type": "string"
                    },
                    "Host": {
                        "type": "string"
                    },
                    "Branch": {
                        "type": "string"
                    },
                    "Commit": {
                        "type": "string"
                    },
                    "ScanVersion": {
                        "description": "Last scan engine version supported by the platform",
                        "type": "string"
                    },
                    "AuditVersion": {
                        "description": "Last audit engine version supported by the platform",
                        "type": "string"
                    }
                }
            },
            "ProtectionConfiguration": {
                "title": "this service handle protection configuration",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "revisionNumber": {
                        "title": "Versioning",
                        "type": "integer",
                        "format": "int64"
                    },
                    "revisionVersion": {
                        "type": "string"
                    },
                    "revisionDescription": {
                        "type": "string"
                    },
                    "guardianConfigurationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "apiFirewallConfigurationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "reportFileId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "configurationAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tagIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "integer"
                        },
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    }
                },
                "description": "------------------------\nCRUD call to API service\n------------------------"
            },
            "ProtectionConfigurationListResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionConfiguration"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "ProtectionDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "cid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "rid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "blockingLevel": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "nonBlockingMode": {
                        "type": "boolean"
                    },
                    "tls": {
                        "type": "boolean"
                    },
                    "tlsProfile": {
                        "$ref": "#/components/schemas/TLSProfile"
                    }
                }
            },
            "ProtectionSession": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "createDate": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "configurationFileId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "deploymentId": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "ProtectionSessionAction": {
                "type": "string",
                "default": "Unknown",
                "enum": [
                    "Unknown",
                    "Stop",
                    "Reconfigure"
                ]
            },
            "ProtectionSessionExecuteDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "sessions": {
                        "$ref": "#/components/schemas/arrayString"
                    },
                    "action": {
                        "$ref": "#/components/schemas/ProtectionSessionAction"
                    }
                }
            },
            "ProtectionSessionList": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionSession"
                        }
                    }
                }
            },
            "ProtectionSummary": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "isProcessed": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "string"
                    },
                    "lastCompilation": {
                        "type": "string"
                    },
                    "compilationStatus": {
                        "type": "boolean"
                    },
                    "numActiveClients": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                }
            },
            "ProtectionTokenDescriptor": {
                "title": "Generic \nXXX SPLIT ACCORDING CALL",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "sroid": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "pcid": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "configurationId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "value": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 0,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{0,64}$"
                    },
                    "createAt": {
                        "type": "string"
                    },
                    "cid": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "deploymentId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "instanceId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    }
                }
            },
            "ProtectionTokenList": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "protection_tokens": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionTokenDescriptor"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "RunningInstanceState": {
                "type": "string",
                "description": "This parameters gives a running instance connection state",
                "enum": [
                    "running",
                    "reconfiguring",
                    "reconfigure failed",
                    "unreachable"
                ]
            },
            "RunningInstanceScope": {
                "type": "string",
                "description": "This parameter gives a running instance scope either scoped to this deployment or always latest",
                "enum": [
                    "latest",
                    "deployment"
                ]
            },
            "RunningInstance": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "instanceId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "deploymentId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "instanceName": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "deploymentName": {
                        "$ref": "#/components/schemas/ProtectionProfileName"
                    },
                    "deploymentCreateAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "state": {
                        "$ref": "#/components/schemas/RunningInstanceState"
                    },
                    "createAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "lastPing": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "guardianNodeName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 255
                    },
                    "logDestination": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 255
                    },
                    "minimumBlockingLevel": {
                        "$ref": "#/components/schemas/uint32Nullable"
                    },
                    "configurationVersion": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 1,
                        "maximum": 2
                    }
                }
            },
            "RunningInstances": {
                "type": "array",
                "maxItems": 9999,
                "items": {
                    "$ref": "#/components/schemas/RunningInstance"
                }
            },
            "StrategyList": {
                "type": "array",
                "maxItems": 999,
                "items": {
                    "$ref": "#/components/schemas/Strategy"
                }
            },
        "Strategies": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
            "value": {
            "type": "array",
            "maxItems": 999,
            "items": {
                "$ref": "#/components/schemas/Strategy"
            }
            }
        }
        },
            "StrategyPayload": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "protectionStrategies": {
                        "type": "array",
                        "maxItems": 999,
                        "items": {
                            "$ref": "#/components/schemas/Strategy"
                        }
                    }
                }
            },
            "ProtectionPath": {
                "type": "string",
                "pattern": "^(?:o\\/|42c\\/|(?:t|u)\\/(?:[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}))(?:(?!\\.\\.|\\.\\/|\\/\\/)(?:\\w|\\-|\\.|\\/)){2,500}$",
                "minLength": 2,
                "maxLength": 500,
                "example": "o/"
            },
            "StrategyContentObject": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "$ref": "#/components/schemas/StrategyContent"
                    }
                }
            },
            "DeploymentSummaryObject": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "$ref": "#/components/schemas/DeploymentSummary"
                    }
                }
            },
            "DeploymentSummary": {
                "type": "string",
                "format": "byte",
                "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$",
                "minLength": 0,
                "maxLength": 999999999999900,
                "description": "JSON file base64 encoded",
                "example": "JSON_File_Base64_encoded"
            },
            "StrategyContent": {
                "type": "string",
                "format": "byte",
                "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$",
                "minLength": 0,
                "maxLength": 9999999,
                "description": "JSON file base64 encoded",
                "example": "JSON_File_Base64_encoded"
            },
            "Strategy": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "path",
                    "contents"
                ],
                "properties": {
                    "path": {
                        "$ref": "#/components/schemas/ProtectionPath"
                    },
                    "contents": {
                        "$ref": "#/components/schemas/StrategyContent"
                    }
                }
            },
            "ProtectionType": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "desc": {
                        "$ref": "#/components/schemas/ProtectionTypeDesc"
                    },
                    "contents": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "dependencies": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionType"
                        }
                    },
                    "missingDependencies": {
                        "title": "Used only with Locked/Publish operation (the content of the protection type is not returned to the caller)",
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionTypeDependency"
                        }
                    },
                    "UnlockedUnpublishedDependencies": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionTypeDependency"
                        }
                    },
                    "lockedParentProtectionTypes": {
                        "title": "Used only for unlock operation",
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionTypeDependency"
                        }
                    }
                }
            },
            "ProtectionTypeDependency": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "ProtectionTypeDesc": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "version": {
                        "type": "string"
                    },
                    "isLocked": {
                        "type": "boolean"
                    },
                    "isPublished": {
                        "type": "boolean"
                    },
                    "dependencies": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ProtectionTypeDescLegacy": {
                "title": "LEGACY",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 0,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{0,64}$"
                    },
                    "namespace": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 0,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{0,64}$"
                    },
                    "version": {
                        "type": "string"
                    },
                    "isLocked": {
                        "title": "Locking a protection type means that it cannot be updated",
                        "type": "boolean"
                    },
                    "isPublished": {
                        "title": "Publishing a protection type means that it is available to all organizations.\nIt must be locked before it can be published",
                        "type": "boolean"
                    },
                    "isShared": {
                        "title": "If not shared, then your organization owns this protection type, otherwise it was published\nfrom a different organization and isPublished and isLocked will both be true",
                        "type": "boolean"
                    }
                }
            },
            "ProtectionTypeLegacy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "desc": {
                        "$ref": "#/components/schemas/ProtectionTypeDescLegacy"
                    },
                    "contents": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "ProtectionTypeList": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "protectionTypes": {
                        "title": "XXX TODO : Len to avoid js to compute",
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionType"
                        }
                    }
                }
            },
            "ProtectionTypeListLegacy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "protectionTypes": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionTypeDescLegacy"
                        }
                    }
                }
            },
            "ProtectionTypePublishLegacyBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "namespace": {
                        "title": "The protection type namespace",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[a-z0-9]+(?:-[a-z0-9]+)*",
                        "type": "string"
                    }
                }
            },
            "ProtectionTypeBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "force": {
                        "title": "False : Display only one level dependencies => Returns the protection types to lock\nTrue : Lock/Publish the protection types in the 'dependencyIds'",
                        "type": "boolean"
                    },
                    "dependencyIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    }
                }
            },
            "ProtectionTypeLegacyBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "ProtectionTypeUpdate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "desc": {
                        "$ref": "#/components/schemas/ProtectionTypeDesc"
                    },
                    "contents": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "RegistrationType": {
                "type": "string",
                "default": "Local",
                "enum": [
                    "Local",
                    "Sso",
                    "Github",
                    "Microsoft",
                    "Google"
                ]
            },
            "ReleaseOasRevision": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "description": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$"
                    }
                }
            },
            "ReleaseSecuredRevisionOas": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "rid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "version": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$"
                    }
                }
            },
            "InstanceReport": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "type": "string",
                        "format": "byte",
                        "minLength": 0
                    }
                }
            },
            "ScanReportsApiListBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/ScanReportSummary"
                        }
                    }
                }
            },
            "ScanReportSummary": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "taskId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "startDate": {
                        "type": "string"
                    },
                    "endDate": {
                        "type": "string"
                    },
                    "scanConfigurationId": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "ScanReport": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "taskId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "scanConfigurationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/dateFormatRFC3339"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/dateFormatRFC3339"
                    },
                    "data": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ReportFormat"
                    },
                    "enc": {
                        "$ref": "#/components/schemas/ReportEnc"
                    },
                    "log": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "Report": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "tid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "cid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "date": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ReportFormat"
                    },
                    "enc": {
                        "type": "string"
                    },
                    "attr": {
                        "$ref": "#/components/schemas/ReportAttributes"
                    },
                    "log": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "ReportAttributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "ReportFilter": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "apiIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    },
                    "collectionIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    },
                    "minDate": {
                        "type": "string"
                    },
                    "maxDate": {
                        "type": "string"
                    }
                }
            },
            "RevisionOas": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "oasFile": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "createAt": {
                        "type": "string"
                    },
                    "taskId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "revisionNumber": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "revisionVersion": {
                        "type": "string"
                    },
                    "revisionDate": {
                        "type": "string"
                    },
                    "SecuredRevisionOasCounter": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "parentId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "yaml": {
                        "type": "boolean"
                    },
                    "lock": {
                        "title": "Only for unrelease oas file",
                        "type": "boolean"
                    },
                    "lockReason": {
                        "type": "string",
                        "format": "name255",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z-_@.+]+$"
                    }
                }
            },
            "RevisionOasDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "createAt": {
                        "type": "string"
                    },
                    "taskId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "revisionNumber": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "revisionVersion": {
                        "type": "string"
                    },
                    "revisionDate": {
                        "type": "string"
                    },
                    "SecuredRevisionOasCounter": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "parentId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "yaml": {
                        "title": "Oas File",
                        "type": "boolean"
                    },
                    "oasFile": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "readSpecFile": {
                        "type": "boolean"
                    }
                }
            },
            "RevisionOasListBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/RevisionOas"
                        }
                    }
                }
            },
            "ScanBody": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "config"
                ],
                "properties": {
                    "config": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "mtlsCertificateFile": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "mtlsCertificatePassword": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 9999999
                    }
                }
            },
            "ScanConfigurationApiListBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/ScanConfigurationApiListItem"
                        }
                    }
                }
            },
            "ScanTokenListBodyV2": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/ScanTokenV2"
                        }
                    }
                }
            },
            "ScanTokenV2": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "value": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "scanConfigurationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createAt": {
                        "type": "string"
                    }
                }
            },
            "ScanTokenCreate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ScanConfigurationApiListItem": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scanConfigurationId",
                    "scanConfigurationName"
                ],
                "properties": {
                    "scanConfigurationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "scanConfigurationName": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\-_\\.]{1,255}$"
                    }
                }
            },
            "ScanConfigurationDescriptorV2": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scanConfigurationId",
                    "scanConfigurationTaskId",
                    "scanConfigurationName",
                    "scanConfigurationValid",
                    "scanConfigurationReport",
                    "scanConfigurationToken"
                ],
                "properties": {
                    "scanConfigurationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "scanConfigurationTaskId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "scanConfigurationValid": {
                        "type": "boolean"
                    },
                    "scanConfigurationName": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\-_\\.]{1,255}$"
                    },
                    "scanConfiguration": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "scanConfigurationReport": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "scanConfigurationToken": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "ScanConfigurationDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "rid": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "name": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\-_\\.]{1,255}$"
                    },
                    "version": {
                        "x-42c-description": "Cannot be used by guardian, the grpc gateway serialize as string...",
                        "type": "integer",
                        "format": "int64"
                    },
                    "valid": {
                        "type": "boolean"
                    },
                    "scanConfiguration": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "scanConfigurationReport": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "tokenId": {
                        "$ref": "#/components/schemas/uuidOrEmpty"
                    },
                    "report": {
                        "title": "Input Query Parameter",
                        "type": "boolean"
                    }
                }
            },
            "ScanConfigurationArray": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/ScanConfigurationDescriptor"
                        }
                    }
                }
            },
            "ScanConfigurationTaskByApiDefaultV2": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$"
                    }
                }
            },
            "ScanConfigurationTaskByApiV2": {
                "type": "object",
                "required": [
                    "name",
                    "scanConfiguration"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\-_\\.]{1,255}$"
                    },
                    "scanConfiguration": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "ScanConfigurationTask": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\-_\\.]{1,255}$"
                    },
                    "scanConfiguration": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "ScanLog": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "state": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "scanDate": {
                        "type": "string"
                    },
                    "organizationId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "collectionId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "apiId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "mode": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "scanConfigurationName": {
                        "type": "string",
                        "format": "nameDescription",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[\\w\\-_\\.]{1,255}$"
                    },
                    "score": {
                        "type": "number",
                        "format": "float"
                    },
                    "numInfoIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numLowIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numMediumIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numHighIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numCriticalIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numTotalIssues": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numTotalRequests": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "issues": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "ScanLogs": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ScanLog"
                        }
                    }
                }
            },
            "ScanSummary": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "isProcessed": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "string"
                    },
                    "numHighs": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "numMediums": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "numLows": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "state": {
                        "type": "string"
                    },
                    "exitCode": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "requestDone": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "mode": {
                        "description": "**scan medium**\n*  `0`: Unknown,\n* `1`: Platform,\n* `2`: OnPrem",
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    },
                    "sqgPass": {
                        "$ref": "#/components/schemas/boolNullable"
                    },
                    "scanVersion": {
                        "description": "scan engine version",
                        "type": "string"
                    }
                }
            },
            "ScanTokenDescriptor": {
                "title": "XXX PLATFORM : Split the messsage\nGeneric scan token message",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "rid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "sid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createAt": {
                        "type": "string"
                    }
                }
            },
            "ScanTokenListBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/ScanTokenDescriptor"
                        }
                    }
                }
            },
            "SecuredRevisionOas": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "rid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "descr": {
                        "$ref": "#/components/schemas/SecuredRevisionOasDescriptor"
                    },
                    "secAsCodeFile": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "SecuredRevisionOasDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "rid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "aid": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "createAt": {
                        "type": "string"
                    },
                    "taskId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "revisionNumber": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "revisionVersion": {
                        "type": "string"
                    },
                    "revisionDate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "SecuredRevisionOasListResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/SecuredRevisionOasDescriptor"
                        }
                    }
                }
            },
            "SecurityProfileDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "file": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "SecurityProfileList": {
                "title": "Security Profil",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/SecurityProfileDescriptor"
                        }
                    }
                }
            },
            "VaultName": {
                "description": "This schema describes the naming convention for the vault name.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "pattern": "^[\\w\\-_\\.]{1,255}$",
                "example": "api.domain.tld_Preproduction_v2"
            },
            "VaultSummary": {
                "type": "object",
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 9999
                    },
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/VaultDetails"
                        }
                    }
                },
                "example": {
                    "num": 2,
                    "list": [
                        {
                            "meta": {
                                "placeholder": "organization",
                                "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "name": "api.domain.tld_Preproduction_v2",
                                "description": "Pre-production credential file for banking api"
                            },
                            "content": {
                                "BasicAuth-Ref123": {
                                    "type": "basic",
                                    "default": "UserRegularEnterprise1",
                                    "credentials": {
                                        "UserRegularEnterprise1": {
                                            "description": "An user belonging to the enterprise 1"
                                        },
                                        "UserAdminEnterprise1": {
                                            "description": "An admin belonging to the enterprise 1"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "meta": {
                                "placeholder": "organization",
                                "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "name": "api.domain.tld_Production_v2",
                                "description": "Production credential file for banking api"
                            },
                            "content": {
                                "BasicAuth-Ref123": {
                                    "type": "basic",
                                    "default": "UserRegularEnterprise1",
                                    "credentials": {
                                        "UserRegularEnterprise1": {
                                            "description": "An user belonging to the enterprise 1"
                                        },
                                        "UserAdminEnterprise1": {
                                            "description": "An admin belonging to the enterprise 1"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            "Vault": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "meta",
                    "securitySchemes"
                ],
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/VaultMeta"
                    },
                    "securitySchemes": {
                        "$ref": "#/components/schemas/SecuritySchemeMap"
                    }
                }
            },
            "SecuritySchemeMap": {
                "description": "Map of credentials for a given security scheme defined by {name} adapted for a type of authentication defined by {type}.",
                "additionalProperties": {
                    "$ref": "#/components/schemas/SecurityScheme"
                },
                "example": {
                    "BasicAuth-Ref123": {
                        "type": "basic",
                        "default": "UserRegularEnterprise1",
                        "credentials": {
                            "UserRegularEnterprise1": {
                                "type": "value",
                                "description": "An user belonging to the enterprise 1",
                                "credential": "user1:password1"
                            },
                            "UserAdminEnterprise1": {
                                "type": "scenario",
                                "description": "An admin belonging to the enterprise 1",
                                "requests": [
                                    {
                                        "type": "curl",
                                        "request": "`curl -H \"X-Vault-Token: MyT0keN\" -X GET http://127.0.0.1:8200/v1/secret/foo`",
                                        "outputContext": {
                                            "HTTPStatus": 200,
                                            "contents": [
                                                {
                                                    "key": "PASSWORD",
                                                    "values": "$.value  ou /value"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "credential": "user1:{{PASSWORD}}"
                            }
                        }
                    }
                }
            },
            "SecurityScheme": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "The authentication type.",
                        "type": "string",
                        "enum": [
                            "http",
                            "basic",
                            "bearer",
                            "apikey"
                        ],
                        "example": "basic"
                    },
                    "description": {
                        "$ref": "#/components/schemas/Description"
                    },
                    "default": {
                        "description": "Default credential to use in the map if no key is specified by the user in the scan configuration",
                        "type": "string"
                    },
                    "credentials": {
                        "description": "A map of credentials",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Credential"
                        }
                    }
                }
            },
            "VaultMeta": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "placeholder": {
                        "$ref": "#/components/schemas/PlaceHolder"
                    },
                    "placeholderID": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "id": {
                        "$ref": "#/components/schemas/uuidReadOnly"
                    },
                    "description": {
                        "$ref": "#/components/schemas/Description"
                    },
                    "name": {
                        "$ref": "#/components/schemas/VaultName"
                    }
                }
            },
            "Credential": {
                "description": "This object describes a scenario composed with:\n\n* a type (currently only one type: 'scenario')\n* one or several requests where it is possible to set variables for response content to be used in the next requests,\n* an output to provide the value to be used in the tests.",
                "type": "object",
                "required": [
                    "type",
                    "credential"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "value",
                            "scenario"
                        ]
                    },
                    "description": {
                        "$ref": "#/components/schemas/Description"
                    },
                    "requests": {
                        "type": "array",
                        "maximum": 99,
                        "items": {
                            "$ref": "#/components/schemas/CredentialRequest"
                        }
                    },
                    "credential": {
                        "type": "string",
                        "pattern": "^[\\w!\\-_\\.@\\*\\/\\#^¨éèêëâäàîïôöç&ùûüŷÿ€$ø£µ\"\\(\\)\\[\\]~><°+={},;:\\?%§]{1,255}$",
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "{{USERNAME}}:{{PASSWORD}}"
                    }
                }
            },
            "VaultDetails": {
                "description": "Vault without content, only details.",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "meta",
                    "securitySchemes"
                ],
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/VaultMeta"
                    },
                    "securitySchemes": {
                        "$ref": "#/components/schemas/SecuritySchemesDetails"
                    }
                }
            },
            "SecuritySchemesDetails": {
                "description": "Map of credential details (no content) for a given security scheme defined by {name} adapted for a type of authentication defined by {type}.",
                "additionalProperties": {
                    "$ref": "#/components/schemas/SecuritySchemeDetails"
                },
                "example": {
                    "BasicAuth-Ref123": {
                        "type": "basic",
                        "default": "UserRegularEnterprise1",
                        "details": {
                            "UserRegularEnterprise1": {
                                "description": "An user belonging to the enterprise 1"
                            },
                            "UserAdminEnterprise1": {
                                "description": "An admin belonging to the enterprise 1"
                            }
                        }
                    }
                }
            },
            "SecuritySchemeDetails": {
                "description": "Credentials dictionary details",
                "type": "object",
                "properties": {
                    "type": {
                        "description": "The authentication type.",
                        "type": "string",
                        "enum": [
                            "http",
                            "basic",
                            "bearer",
                            "apikey"
                        ],
                        "example": "basic"
                    },
                    "default": {
                        "description": "Default credential to use in the map if no key is specified by the user in the scan configuration",
                        "type": "string"
                    },
                    "description": {
                        "$ref": "#/components/schemas/Description"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/CredentialsDetailsMap"
                    }
                }
            },
            "CredentialsDetailsMap": {
                "description": "This map contains details of each credential stored in the parent vault",
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/CredentialDetails"
                }
            },
            "CredentialDetails": {
                "description": "This object contains the description of the given credentials",
                "type": "object",
                "properties": {
                    "description": {
                        "$ref": "#/components/schemas/Description"
                    }
                }
            },
            "CredentialRequest": {
                "type": "object",
                "description": "42C format to describe a http request to send by the scan.",
                "required": [
                    "host",
                    "path",
                    "method"
                ],
                "properties": {
                    "host": {
                        "type": "string",
                        "description": "The host for the URL."
                    },
                    "path": {
                        "description": "The complete path of the URI request",
                        "type": "string"
                    },
                    "method": {
                        "description": "The HTTP method of the request.",
                        "type": "string"
                    },
                    "pathParameters": {
                        "type": "object",
                        "description": "Map of path parameters values",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "queryParameters": {
                        "type": "object",
                        "description": "Map of query parameters values",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "headerParameters": {
                        "type": "object",
                        "description": "Map of header parameters values",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "cookieParameters": {
                        "type": "object",
                        "description": "Map of cookie parameters values",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "requestBody": {
                        "$ref": "#/components/schemas/CredentialRequestBody"
                    }
                }
            },
            "CredentialRequestBody": {
                "type": "object",
                "description": "42C format to describe a http request body.",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CredentialRequestRaw"
                    },
                    {
                        "$ref": "#/components/schemas/CredentialRequestJson"
                    }
                ]
            },
            "CredentialRequestRaw": {
                "type": "object",
                "required": [
                    "mode",
                    "raw"
                ],
                "properties": {
                    "mode": {
                        "type": "string",
                        "description": "Type of the request body",
                        "enum": [
                            "raw"
                        ]
                    },
                    "raw": {
                        "type": "string"
                    },
                    "options": {
                        "$ref": "#/components/schemas/CredentialRequestRawOptions"
                    }
                }
            },
            "CredentialRequestRawOptions": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "raw"
                ],
                "properties": {
                    "raw": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "language"
                        ],
                        "properties": {
                            "language": {
                                "type": "string",
                                "enum": [
                                    "json"
                                ]
                            }
                        }
                    }
                }
            },
            "CredentialRequestJson": {
                "type": "object",
                "required": [
                    "mode",
                    "json"
                ],
                "properties": {
                    "mode": {
                        "type": "string",
                        "description": "Type of the request body",
                        "enum": [
                            "json"
                        ]
                    },
                    "json": {
                        "description": "Json value to send in the body",
                        "type": "string"
                    }
                }
            },
            "SpecEndpoint": {
                "title": "Message related to API Spec file call",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "SpecFilter": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "filter": {
                        "title": "Filter flag",
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "SpecOperation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "params": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/SpecParam"
                        }
                    }
                }
            },
            "SpecParam": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "in": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "SpecPath": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "full": {
                        "type": "string"
                    },
                    "operations": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/SpecOperation"
                        }
                    }
                }
            },
            "SpecSecurity": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "apiKeyIn": {
                        "type": "string"
                    },
                    "apiKeyName": {
                        "type": "string"
                    }
                }
            },
            "Specs": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "endpoints": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/SpecEndpoint"
                        }
                    },
                    "basePath": {
                        "type": "string"
                    },
                    "paths": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/SpecPath"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "oasVersion": {
                        "type": "string"
                    },
                    "security": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "array",
                            "minItems": 0,
                            "maxItems": 999999999999,
                            "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {}
                            }
                        }
                    },
                    "securitySchemes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SpecSecurity"
                        }
                    }
                }
            },
            "StatusReport": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "clients": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/ClientDetails"
                        }
                    }
                }
            },
            "Subscription": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "subscriptionType": {
                        "$ref": "#/components/schemas/SubscriptionType"
                    },
                    "limits": {
                        "$ref": "#/components/schemas/SubscriptionLimits"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/SubscriptionContact"
                    }
                }
            },
            "SubscriptionContact": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "email": {
                        "$ref": "#/components/schemas/email"
                    },
                    "company": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "address": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "city": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "country": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "state": {
                        "type": "string",
                        "format": "name64",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                    },
                    "vat": {
                        "type": "string"
                    }
                }
            },
            "SubscriptionLimits": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "numUser": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numApi": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "numFw": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "protect": {
                        "type": "boolean"
                    }
                }
            },
            "SubscriptionType": {
                "type": "string",
                "default": "Individuals",
                "enum": [
                    "Individuals",
                    "Teams",
                    "Enterprise"
                ]
            },
            "Summaries": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/Summary"
                        }
                    }
                }
            },
            "Summary": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "notifications": {
                        "$ref": "#/components/schemas/arrayString"
                    },
                    "dateLateJob": {
                        "type": "string"
                    },
                    "file": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "SummaryCompareBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "referenceId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "diffId": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "file": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "SummaryFilter": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "type": {
                        "$ref": "#/components/schemas/SummaryFilterSummaryType"
                    }
                }
            },
            "TLSProfile": {
                "title": "XXX TBD",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "protocols": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "string"
                        }
                    },
                    "openSSLCipherSuite": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tag": {
                "title": "this service handle tags",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "$ref": "#/components/schemas/TagName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/CategoryAndTagDescription"
                    }
                },
                "description": "------------------------\nCRUD call to API service\n------------------------"
            },
            "TagListResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/TagCategory"
                    },
                    "tags": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/TagWithDependencies"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "TagName": {
                "description": "The name of the tag. A tag is associated to a category as a key pair (i.e.: categoryName:tagName). A tag name CAN be composed using letters, integers and some special chars: -_@.+",
                "format": "name255",
                "type": "string",
                "maxLength": 255,
                "minLength": 1,
                "pattern": "^[\\w\\-_@.+]{1,255}$",
                "example": "tag-name@v1.1.0_r12345+6567765"
            },
            "TagNameOrEmpty": {
                "description": "The name of the tag. A tag is associated to a category as a key pair (i.e.: categoryName:tagName). A tag name CAN be composed using letters, integers and some special chars: -_@.+",
                "format": "name255",
                "type": "string",
                "maxLength": 255,
                "minLength": 1,
                "pattern": "(^$|^[\\w\\-_@.+]{1,255}$)",
                "example": "tag-name@v1.1.0_r12345+6567765"
            },
            "Task": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "success"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "TokenDescriptor": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/TokenDescriptorApi"
                    },
                    {
                        "$ref": "#/components/schemas/TokenDescriptorIde"
                    }
                ]
            },
            "TokenDescriptorPayload": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/TokenDescriptorPayloadApi"
                    },
                    {
                        "$ref": "#/components/schemas/TokenDescriptorPayloadIde"
                    }
                ]
            },
            "TokenDescriptorApi": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "type",
                    "name",
                    "flags",
                    "expiration"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "type": {
                        "description": "It is possible to have 2 sort of user tokens: API and IDE.\n\nAPI token is design to be used for CI/CD scripts. The IDE Token is dedicated to the IDE plugins usage.",
                        "type": "string",
                        "enum": [
                            "api"
                        ],
                        "default": "api"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "^[\\w\\-_ ]{1,64}$",
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Token Name - v2"
                    },
                    "value": {
                        "$ref": "#/components/schemas/PrefixedApiUuid"
                    },
                    "flags": {
                        "$ref": "#/components/schemas/TokenFlags"
                    },
                    "creationDate": {
                        "$ref": "#/components/schemas/TimestampReadOnly"
                    },
                    "expiration": {
                        "type": "boolean",
                        "default": true
                    },
                    "expirationDate": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            },
            "TokenDescriptorIde": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "type",
                    "name",
                    "expiration"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "type": {
                        "description": "It is possible to have 2 sort of user tokens: API and IDE.\n\nAPI token is design to be used for CI/CD scripts. The IDE Token is dedicated to the IDE plugins usage.",
                        "type": "string",
                        "enum": [
                            "ide"
                        ],
                        "default": "ide"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "^[\\w\\-_ ]{1,64}$",
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Ide Token - John Doe"
                    },
                    "value": {
                        "$ref": "#/components/schemas/PrefixedIdeUuid"
                    },
                    "creationDate": {
                        "$ref": "#/components/schemas/TimestampReadOnly"
                    },
                    "expiration": {
                        "type": "boolean",
                        "default": true
                    },
                    "expirationDate": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            },
            "TokenDescriptorPayloadApi": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "flags",
                    "expiration"
                ],
                "properties": {
                    "type": {
                        "description": "It is possible to have 2 sort of user tokens: API and IDE.\n\nAPI token is design to be used for CI/CD scripts. The IDE Token is dedicated to the IDE plugins usage.",
                        "type": "string",
                        "enum": [
                            "api",
                            ""
                        ]
                    },
                    "name": {
                        "type": "string",
                        "pattern": "^[\\w\\-_ ]{1,64}$",
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Token Name - v2"
                    },
                    "flags": {
                        "$ref": "#/components/schemas/TokenFlags"
                    },
                    "expiration": {
                        "type": "boolean",
                        "default": true
                    },
                    "expirationDate": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            },
            "TokenDescriptorPayloadIde": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "name",
                    "expiration"
                ],
                "properties": {
                    "type": {
                        "description": "It is possible to have 2 sort of user tokens: API and IDE.\n\nAPI token is design to be used for CI/CD scripts. The IDE Token is dedicated to the IDE plugins usage.",
                        "type": "string",
                        "enum": [
                            "ide"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "pattern": "^[\\w\\-_ ]{1,64}$",
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Token Name - v2"
                    },
                    "expiration": {
                        "type": "boolean",
                        "default": true
                    },
                    "expirationDate": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            },
            "TokenFlags": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "assess": {
                        "type": "boolean"
                    },
                    "scan": {
                        "type": "boolean"
                    },
                    "protect": {
                        "type": "boolean"
                    },
                    "list": {
                        "type": "boolean"
                    },
                    "delete": {
                        "type": "boolean"
                    }
                }
            },
            "TokenListResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/TokenDescriptor"
                        }
                    }
                }
            },
            "User": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "desc": {
                        "$ref": "#/components/schemas/UserDescriptor"
                    },
                    "flags": {
                        "$ref": "#/components/schemas/UserFlags"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UserData"
                    },
                    "summary": {
                        "$ref": "#/components/schemas/UserSummary"
                    }
                }
            },
            "UserName": {
                "type": "string",
                "format": "nameHuman",
                "minLength": 1,
                "maxLength": 50,
                "pattern": "^[a-zA-Z\\s]{1,50}$"
            },
            "UserData": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "firstname": {
                        "$ref": "#/components/schemas/UserName"
                    },
                    "lastname": {
                        "$ref": "#/components/schemas/UserName"
                    },
                    "email": {
                        "$ref": "#/components/schemas/email"
                    }
                }
            },
            "UserDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 10,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&~|:.;,{}£_^<=>+()#-])[A-Za-z\\d@$!%*?&~|:.;,{}£_^<=>+()#-]{10,64}$"
                    },
                    "registrationType": {
                        "$ref": "#/components/schemas/RegistrationType"
                    }
                }
            },
            "UserFlags": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "admin": {
                        "type": "boolean"
                    },
                    "change": {
                        "type": "boolean"
                    },
                    "lock": {
                        "type": "boolean"
                    },
                    "canShareCollection": {
                        "type": "boolean"
                    },
                    "canSharePublically": {
                        "type": "boolean"
                    },
                    "canScan": {
                        "type": "boolean"
                    },
                    "auditor": {
                        "type": "boolean"
                    }
                }
            },
            "UserList": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 4294967295,
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "UserMailInvitation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$",
                        "type": "string"
                    },
                    "userFlags": {
                        "$ref": "#/components/schemas/UserFlags"
                    }
                }
            },
            "UserPassword": {
                "title": "XXX may be we should have an Authentication Manager / which \n will handle password change and 2FA authentication setup",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "current": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 10,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&~|:.;,{}£_^<=>+()#-])[A-Za-z\\d@$!%*?&~|:.;,{}£_^<=>+()#-]{10,64}$"
                    },
                    "new": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 10,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&~|:.;,{}£_^<=>+()#-])[A-Za-z\\d@$!%*?&~|:.;,{}£_^<=>+()#-]{10,64}$"
                    },
                    "deleteSession": {
                        "type": "boolean"
                    }
                }
            },
            "UserSummary": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "api": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "collection": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "VHost": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "descr": {
                        "$ref": "#/components/schemas/VHostDescriptor"
                    },
                    "customVhostConf": {
                        "$ref": "#/components/schemas/base64"
                    },
                    "logDestination": {
                        "$ref": "#/components/schemas/base64"
                    }
                }
            },
            "VHostDescriptorList": {
                "type": "array",
                "minItems": 0,
                "maxItems": 999999999,
                "items": {
                    "$ref": "#/components/schemas/VHostDescriptor"
                }
            },
            "VHostDescriptor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "inboundSettings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "securedRevisonOasBackend": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/LinkSecuredOasBackend"
                        }
                    },
                    "tagIds": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/uuid"
                        }
                    },
                    "tag": {
                        "title": "Search criteria",
                        "type": "string"
                    }
                }
            },
            "ExecutiveAudit": {
                "type": "object",
                "properties": {
                    "newPeriod": {
                        "$ref": "#/components/schemas/ExecutiveAuditPeriod"
                    },
                    "oldPeriod": {
                        "$ref": "#/components/schemas/ExecutiveAuditPeriod"
                    }
                }
            },
            "ExecutiveAuditPeriod": {
                "type": "object",
                "properties": {
                    "auditNumber": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "averageScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "auditPerDay": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/ActionPerDay"
                        }
                    },
                    "scoreRange": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/ScoreRange"
                        }
                    }
                }
            },
            "ActionsInformation": {
                "type": "object",
                "properties": {
                    "actionSets": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ActionSetInfo"
                        }
                    }
                }
            },
            "ActionSetInfo": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "actiongroups": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ActionGroupInfo"
                        }
                    }
                }
            },
            "ActionGroupInfo": {
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ActionInfo"
                        }
                    }
                }
            },
            "ActionInfo": {
                "properties": {
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "sunset": {
                        "type": "string"
                    },
                    "sunsetversion": {
                        "type": "string"
                    },
                    "critical": {
                        "type": "boolean"
                    }
                }
            },
            "ActionsList": {
                "description": "A list of \"Action\" in an array. Actions are used to describe feature that an user can perform on the platform.",
                "type": "array",
                "maxItems": 999,
                "items": {
                    "type": "string"
                },
                "example": [
                    "GetApi",
                    "CreateAPi",
                    "DeleteApi"
                ]
            },
            "ActionPerDay": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "averageScore": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    }
                }
            },
            "ScoreRange": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                }
            },
            "ExecutiveProtection": {
                "type": "object",
                "properties": {
                    "newPeriod": {
                        "$ref": "#/components/schemas/ExecutiveProtectionPeriod"
                    },
                    "oldPeriod": {
                        "$ref": "#/components/schemas/ExecutiveProtectionPeriod"
                    }
                }
            },
            "ExecutiveProtectionPeriod": {
                "type": "object",
                "properties": {
                    "protectionPerDay": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/ProtectionPerDay"
                        }
                    },
                    "ProtectedApi": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ProtectedRequest": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberApi": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ProtectionPerDay": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                }
            },
            "ScanPerDay": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "date": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "successfulScan": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                }
            },
            "ExecutiveScan": {
                "type": "object",
                "properties": {
                    "newPeriod": {
                        "$ref": "#/components/schemas/ExecutiveScanPeriod"
                    },
                    "oldPeriod": {
                        "$ref": "#/components/schemas/ExecutiveScanPeriod"
                    }
                }
            },
            "ExecutiveScanPeriod": {
                "type": "object",
                "properties": {
                    "scanPerDay": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/ScanPerDay"
                        }
                    },
                    "scanDone": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scannedApi": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberApi": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "successfulScan": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AuthLoginData": {
                "title": "Login.\nTODO to convert in types.Auth kind of stuff",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 1,
                        "maxLength": 100,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&~|:.;,{}£_^<=>+()#-])[A-Za-z\\d@$!%*?&~|:.;,{}£_^<=>+()#-]{10,64}$"
                    }
                }
            },
            "AuthResetData": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/email"
                    }
                }
            },
            "AuthResetVerifyData": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 512
                    },
                    "user": {
                        "$ref": "#/components/schemas/email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 1,
                        "maxLength": 100,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&~|:.;,{}£_^<=>+()#-])[A-Za-z\\d@$!%*?&~|:.;,{}£_^<=>+()#-]{10,64}$"
                    },
                    "deleteSession": {
                        "type": "boolean"
                    }
                }
            },
            "protobufAny": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "typeUrl": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    },
                    "value": {
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "byte"
                    }
                },
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "rpcStatus": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    "message": {
                        "type": "string",
                        "pattern": "^.*$",
                        "minLength": 0,
                        "maxLength": 999999999999
                    },
                    "details": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "ApiEnv": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "serverName": {
                        "type": "string"
                    },
                    "targetURL": {
                        "type": "string"
                    },
                    "certName": {
                        "type": "string"
                    },
                    "keyName": {
                        "type": "string"
                    }
                }
            },
            "empty": {
                "type": "object",
                "additionalProperties": false
            },
            "EnvProps": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "apis": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ApiEnv"
                        }
                    }
                }
            },
            "Metrics": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "ReqsCount": {
                        "title": "Total number of requests handled (since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "ReqsAvgRate": {
                        "title": "Number of requests/sec (average, since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "ReqsCurRate": {
                        "title": "Number of requests/sec (average, since last time asked)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "ConnsCount": {
                        "title": "Total number of connections handled (since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "ConnsAvgRate": {
                        "title": "Number of connections/sec (average, since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "ConnsCurRate": {
                        "title": "Number of requests/sec (average, since last time asked)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "InBytesCount": {
                        "title": "Number of incoming bytes (since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "InBytesAvgRate": {
                        "title": "Number of incoming bytes/sec (average, since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "InBytesCurRate": {
                        "title": "Number of incoming bytes/sec (average, since last time asked)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "InTtfbAvgRate": {
                        "title": "Time To First incoming Byte in microseconds (average, since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "InTtfbCurRate": {
                        "title": "Time To First incoming Byte in microseconds (average, since last time\nasked)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "InTtlbAvgRate": {
                        "title": "Time To Last incoming Byte in microseconds (average, since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "InTtlbCurRate": {
                        "title": "Time To Last incoming Byte in microseconds (average, since last time asked)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "OutBytesCount": {
                        "title": "Number of outgoing bytes (since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "OutBytesAvgRate": {
                        "title": "Number of outgoing bytes/sec (average, since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "OutBytesCurRate": {
                        "title": "Number of outgoing bytes/sec (average, since last time asked)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "OutTtfbAvgRate": {
                        "title": "Time To First outgoing Byte in microseconds (average, since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "OutTtfbCurRate": {
                        "title": "Time To First outgoing Byte in microseconds (average, since last time\nasked)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "OutTtlbAvgRate": {
                        "title": "Time To Last outgoing Byte in microseconds (average, since startup)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    },
                    "OutTtlbCurRate": {
                        "title": "Time To Last outgoing Byte in microseconds (average, since last time asked)",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0,
                        "maximum": 9223372036854775807
                    }
                }
            },
            "NotificationOnEvent": {
                "title": "The order must never change",
                "type": "string",
                "default": "ON_EVENT_UNKNOWN",
                "enum": [
                    "ON_EVENT_UNKNOWN",
                    "ON_EVENT_ASSESSMENT",
                    "ON_EVENT_ASSESSMENT_SUMMARY"
                ]
            },
            "Session": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/uuid"
                    }
                }
            },
            "TrafficStatistics": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Server": {
                        "$ref": "#/components/schemas/Metrics"
                    },
                    "Proxy": {
                        "$ref": "#/components/schemas/Metrics"
                    },
                    "Backend": {
                        "$ref": "#/components/schemas/Metrics"
                    }
                }
            },
            "arrayString": {
                "type": "array",
                "format": "arrayString",
                "maxItems": 9999,
                "items": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 999999999999
                }
            },
        "arrayUUID": {
        "type": "array",
        "maxItems": 9999,
        "items": {
                    "description": "A universally unique identifier (UUID) is a 128-bit label used for information in computer systems.",
                    "type": "string",
                    "format": "uuid",
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "123e4567-e89b-12d3-a456-426614174000"
        }
        },
            "int32Nullable": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "maximum": 2147483647
            },
            "uint32Nullable": {
                "nullable": true,
                "type": "integer",
                "format": "uint32",
                "minimum": 0,
                "maximum": 4294967295
            },
            "int64Nullable": {
                "nullable": true,
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "maximum": 9223372036854775807
            },
            "uint64Nullable": {
                "nullable": true,
                "type": "integer",
                "format": "uint64",
                "minimum": 0,
                "maximum": 110000000
            },
            "boolNullable": {
                "nullable": true,
                "type": "boolean"
            },
            "stringNullable": {
                "nullable": true,
                "type": "string"
            },
            "KdbOpenapiListIssuesBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 999999999999
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/openapiIssue"
                        }
                    }
                }
            },
            "openapiIssue": {
                "type": "object",
                "properties": {
                    "deprecated": {
                        "$ref": "#/components/schemas/openapiIssueDeprecated"
                    },
                    "key": {
                        "$ref": "#/components/schemas/openapiIssueKey"
                    },
                    "version": {
                        "$ref": "#/components/schemas/openapiIssueVersion"
                    },
                    "type": {
                        "$ref": "#/components/schemas/openapiIssueType"
                    },
                    "description": {
                        "$ref": "#/components/schemas/openapiIssueDescription"
                    }
                }
            },
            "openapiIssueDeprecated": {
                "description": "openapi issue's is deprecated",
                "type": "boolean"
            },
            "openapiIssueKey": {
                "description": "openapi issue's key",
                "type": "string",
                "minLength": 1,
                "maxLength": 1024
            },
            "openapiIssueVersion": {
                "description": "openapi issue's version",
                "type": "string",
                "enum": [
                    "v2",
                    "v3"
                ]
            },
            "openapiIssueType": {
                "description": "openapi issue's type",
                "type": "string",
                "enum": [
                    "validation",
                    "semantic",
                    "warning"
                ]
            },
            "openapiIssueDescription": {
                "description": "openapi issue's description",
                "type": "string",
                "minLength": 0,
                "maxLength": 4096,
                "pattern": "^[\\w\\._\\-+',:;.\\(\\) @\\[\\]\\/#=\\%!&?]{1,4096}$"
            },
            "KdbAuditListIssuesBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 999999999999
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/auditIssue"
                        }
                    }
                }
            },
            "auditIssue": {
                "type": "object",
                "properties": {
                    "deprecated": {
                        "$ref": "#/components/schemas/auditIssueDeprecated"
                    },
                    "key": {
                        "$ref": "#/components/schemas/auditIssueKey"
                    },
                    "version": {
                        "$ref": "#/components/schemas/auditIssueVersion"
                    },
                    "description": {
                        "$ref": "#/components/schemas/auditIssueDescription"
                    },
                    "section": {
                        "$ref": "#/components/schemas/auditIssueSection"
                    },
                    "criticalities": {
                        "$ref": "#/components/schemas/auditCriticalities"
                    }
                }
            },
            "auditIssueDeprecated": {
                "description": "audit issue's is deprecated",
                "type": "boolean"
            },
            "auditIssueKey": {
                "description": "audit issue's key",
                "type": "string",
                "minLength": 1,
                "maxLength": 1024
            },
            "auditIssueVersion": {
                "description": "audit issue's version",
                "type": "string",
                "enum": [
                    "v2",
                    "v3"
                ]
            },
            "auditIssueDescription": {
                "description": "audit issue's description",
                "type": "string",
                "minLength": 0,
                "maxLength": 4096,
                "pattern": "^[\\w\\._\\-+',:;.\\(\\) @\\[\\]\\/#=\\%!&?]{1,4096}$"
            },
            "auditIssueSection": {
                "description": "audit issue's section",
                "type": "string",
                "enum": [
                    "schema",
                    "authentication",
                    "authorization",
                    "transport",
                    "parameters",
                    "paths",
                    "responsedefinition"
                ]
            },
            "auditCriticalities": {
                "description": "audit issue's criticality",
                "type": "array",
                "maxItems": 9999,
                "items": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0,
                    "maximum": 5
                }
            },
            "KdbScanListInjectionsBody": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 999999999999
                    },
                    "list": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 999999999999,
                        "items": {
                            "$ref": "#/components/schemas/scanInjection"
                        }
                    }
                }
            },
            "scanInjection": {
                "type": "object",
                "properties": {
                    "key": {
                        "$ref": "#/components/schemas/scanInjectionKey"
                    },
                    "description": {
                        "$ref": "#/components/schemas/scanInjectionDescription"
                    }
                }
            },
            "scanInjectionKey": {
                "description": "scan injection's key",
                "type": "string",
                "minLength": 1,
                "maxLength": 1024
            },
            "scanInjectionDescription": {
                "description": "scan injection's description",
                "type": "string",
                "minLength": 0,
                "maxLength": 4096,
                "pattern": "^[\\w\\._\\-+',:;.\\(\\) @\\[\\]\\/#=\\%!&?]{1,4096}$"
            },
            "DataDictionaryRestoreBody": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "payloads"
                ],
                "properties": {
                    "payloads": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/dataDictionaryFormatPayload"
                        }
                    }
                },
                "example": {
                    "valid": {
                        "payloads": {
                            "date": {
                                "primitiveType": "format",
                                "name": "date",
                                "format": "date",
                                "type": "string",
                                "description": "A string instance is valid against this attribute if it is a valid representation according to the \"full-date\" production, derived from RFC 3339, section 5.6",
                                "sensitivity": "1",
                                "pii": "no",
                                "objectIdentifier": "no"
                            },
                            "date-time": {
                                "primitiveType": "format",
                                "name": "date-time",
                                "format": "date-time",
                                "type": "string",
                                "description": "A string instance is valid against this attribute if it is a valid representation according to the 'date-time' production, derived from RFC 3339, section 5.6",
                                "sensitivity": "1",
                                "pii": "no",
                                "objectIdentifier": "no"
                            }
                        }
                    }
                }
            },
            "dataDictionary": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DataDictionaryMeta"
                    },
                    {
                        "$ref": "#/components/schemas/dataDictionaryMetaAndFormats"
                    }
                ]
            },
            "dataDictionariesSummary": {
                "type": "object",
                "properties": {
                    "list": {
                        "type": "array",
                        "maxItems": 9999,
                        "items": {
                            "$ref": "#/components/schemas/dataDictionary"
                        }
                    },
                    "num": {
                        "$ref": "#/components/schemas/uint32"
                    }
                }
            },
            "DataDictionaryMeta": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "description",
                    "shared"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/dataDictionaryId"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryDescription"
                    },
                    "shared": {
                        "$ref": "#/components/schemas/dictionaryShared"
                    }
                }
            },
            "dataDictionaryMetaAndFormats": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "name",
                    "description",
                    "shared"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/dataDictionaryId"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryDescription"
                    },
                    "shared": {
                        "$ref": "#/components/schemas/dictionaryShared"
                    },
                    "formats": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/dataDictionaryFormat"
                        }
                    }
                }
            },
            "dataDictionaryPayload": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "description",
                    "shared"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/dictionaryName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryDescription"
                    },
                    "shared": {
                        "$ref": "#/components/schemas/dictionaryShared"
                    }
                }
            },
            "dataDictionaryFormatContents": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "format"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/dataDictionaryId"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryDescription"
                    },
                    "shared": {
                        "$ref": "#/components/schemas/dictionaryShared"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/dictionaryLastUpdate"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dataDictionaryFormat"
                    }
                }
            },
            "DataDictionaryDeleteResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "success"
                ],
                "properties": {
                    "success": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "dictionaryName": {
                "description": "Data Dictionary name",
                "type": "string",
                "pattern": "^[a-zA-Z0-9-_@.+]{1,255}$",
                "minLength": 1,
                "maxLength": 255,
                "example": "Banking"
            },
            "dictionaryDescription": {
                "description": "Short description to provide enough context for a reader in order to help him to understand the Data Dictionary contents. It should be as concise as possible (max. 255 characters).",
                "type": "string",
                "pattern": "^(?:[^\\x00-\\x1f\\x7f]|[\r\n]){2,255}$",
                "minLength": 0,
                "maxLength": 255,
                "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. "
            },
            "dictionaryShared": {
                "description": "This parameter allows to share the dictionary and its contents for the read-only users and it can be used in the IDE plugins.",
                "type": "string",
                "enum": [
                    "yes",
                    "no"
                ],
                "default": "no"
            },
            "dictionaryFormatStandardNullable": {
                "description": "For the standard data dictionary formats only, this field describe the state of the the format.\n * default: default format described by 42crunch. If the user update the format, will be switched to `custom`\n * custom: standard format customized by the user",
                "type": "string",
                "enum": [
                    "default",
                    "custom"
                ]
            },
            "dictionaryLastUpdate": {
                "description": "Unix timestamp. Last format update date, this parameter is useful to verify if there is an update available of the pattern.",
                "type": "integer",
                "format": "int64",
                "example": 1637949572
            },
            "dictionaryFormatDescription": {
                "description": "Short description to provide enough context for a reader in order to help him to understand the Data Dictionary contents. It should be as concise as possible (max. 255 characters).",
                "type": "string",
                "pattern": "^[\\r\\n\\x20-\\x7e\\x80-\\xff]{0,2048}$",
                "minLength": 0,
                "maxLength": 2048,
                "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. "
            },
            "dictionaryFormatPrimitiveType": {
                "description": "Primitive type identify the data type (format, array, object). Only \"format\" is available for now.",
                "type": "string",
                "enum": [
                    "format"
                ],
                "example": "format"
            },
            "dictionaryFormatNullable": {
                "description": "User Format name.",
                "type": "string",
                "pattern": "^[\\w\\-_]{1,255}$",
                "minLength": 1,
                "maxLength": 255,
                "example": "ipv4",
                "nullable": true
            },
            "dictionaryFormatName": {
                "description": "Format name.",
                "type": "string",
                "pattern": "^[a-zA-Z0-9-_]{1,255}$",
                "minLength": 1,
                "maxLength": 255,
                "example": "ipv4"
            },
            "dictionaryFormatType": {
                "description": "Type of the parameter described by the format.",
                "type": "string",
                "enum": [
                    "string",
                    "integer",
                    "number"
                ],
                "default": "string",
                "pattern": "^(string|integer|number)$",
                "example": "string"
            },
            "dictionaryFormatPattern": {
                "description": "The pattern keyword lets you define a regular expression template for the string value. Only the values that match this template will be accepted. The regular expression syntax used is from JavaScript (more specifically, ECMA 262). Note: \"pattern\" can not be combined with \"enum\".",
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "pattern": "^.*$",
                "nullable": true,
                "example": "^http\\://www.[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}/$"
            },
            "dictionaryFormatEnum": {
                "description": "You can use the enum keyword to specify possible values of a request parameter or a model property. The values MUST be separated by a comma: option1,option2,option3. Note: \"enum\" can not be combined with \"pattern\".",
                "type": "array",
                "maxItems": 999,
                "nullable": true,
                "example": [
                    "yellow",
                    "blue",
                    "red",
                    "green"
                ],
                "items": {
                    "description": "Enum value.",
                    "type": "string",
                    "pattern": "^(.*){1,100}$",
                    "minLength": 1,
                    "maxLength": 100
                }
            },
            "dictionaryFormatIntegerValueNullable": {
                "type": "integer",
                "format": "int64",
                "description": "The example must reflect a valid value of the integer.",
                "minimum": -9223372036854775807,
                "maximum": 9223372036854775807,
                "nullable": true,
                "example": 45671
            },
            "dictionaryFormatNumberValueNullable": {
                "type": "number",
                "format": "double",
                "description": "The example must reflect a valid number value.",
                "minimum": -9.44,
                "maximum": 9.2233,
                "nullable": true,
                "example": 1.451
            },
            "dictionaryFormatMinimumNullable": {
                "description": "(x ≥ minimum) Use the minimum keyword to specify the minimum range of possible values.",
                "type": "integer",
                "format": "int64",
                "default": 0,
                "nullable": true,
                "example": 0
            },
            "dictionaryFormatMaximumNullable": {
                "description": "(x ≤ maximum) Use the maximum keyword to specify the maximal range of possible values.",
                "type": "integer",
                "format": "int64",
                "minimum": -9223372036854775807,
                "maximum": 9223372036854775807,
                "default": 9999999,
                "nullable": true,
                "example": 999
            },
            "dictionaryFormatNumberMinimumNullable": {
                "description": "(x ≥ minimum) Use the minimum keyword to specify the minimum range of possible values.",
                "type": "number",
                "format": "double",
                "default": 0,
                "nullable": true,
                "example": 0
            },
            "dictionaryFormatNumberMaximumNullable": {
                "description": "(x ≤ maximum) Use the maximum keyword to specify the maximal range of possible values.",
                "type": "number",
                "format": "double",
                "default": 0,
                "nullable": true,
                "example": 999
            },
            "dictionaryFormatExclusiveMinimumNullable": {
                "description": "(x > exclusiveMinimum) Use the exclusiveMinimum keywords to specify the minimal range of possible values. Exclusive excludes the boundary values.",
                "type": "boolean",
                "example": false
            },
            "dictionaryFormatExclusiveMaximumNullable": {
                "description": "(x < exclusiveMaximum). Use the minimum and maximum keywords to specify the range of possible values. Exclusive excludes the boundary values.",
                "type": "boolean",
                "example": false
            },
            "dictionaryFormatMultipleOfNullable": {
                "description": "Use the multipleOf keyword to specify that a number must be the multiple of another number. The value of multipleOf must be a positive number, that is, you cannot use multipleOf: -5.",
                "type": "number",
                "default": 10,
                "nullable": true,
                "example": 2.5
            },
            "dictionaryFormatReadOnlyNullable": {
                "description": "It MAY be sent as part of a response but SHOULD NOT be sent as part of the request.",
                "type": "boolean",
                "default": false
            },
            "dictionaryFormatWriteOnlyNullable": {
                "description": "It MAY be sent as part of a request but SHOULD NOT be sent as part of the response.",
                "type": "boolean",
                "default": false
            },
            "dictionaryFormatIsNullable": {
                "description": "you can use nullable: true to specify that the value may be null.",
                "type": "boolean",
                "default": false
            },
            "dictionaryFormatMinlengthNullable": {
                "description": "When The type is string, the maximum length has to be specify. We encourage to specify this information in the regexp too.",
                "type": "integer",
                "format": "int64",
                "minimum": -9223372036854775807,
                "maximum": 9223372036854775807,
                "default": 1,
                "nullable": true,
                "example": 0
            },
            "dictionaryFormatMaxlengthNullable": {
                "description": "When The type is string, the maximum length has to be specify. We recommends to specify this information in the regexp too.",
                "type": "integer",
                "format": "int64",
                "minimum": -9223372036854775807,
                "maximum": 9223372036854775807,
                "default": 35,
                "nullable": true,
                "example": 2048
            },
            "dictionaryFormatStringValue": {
                "description": "The example must match with the given regexp pattern.",
                "type": "string",
                "pattern": "^.*$",
                "minLength": 1,
                "maxLength": 1024,
                "nullable": true,
                "example": "http://www.domain.tld"
            },
            "dictionaryFormatSensitivity": {
                "description": "Level of parameters data sensitivity (0:none, 1:info, 2:low, 3:medium, 4:high, 5:critical).",
                "type": "integer",
                "default": 0,
                "minLength": 0,
                "maxLength": 5,
                "pattern": "^[0-5]{1}$",
                "example": 5
            },
            "dataDictionaryFormat": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/dictionaryFormatTypeString"
                    },
                    {
                        "$ref": "#/components/schemas/dictionaryFormatTypeEnum"
                    },
                    {
                        "$ref": "#/components/schemas/dictionaryFormatTypeInteger"
                    },
                    {
                        "$ref": "#/components/schemas/dictionaryFormatTypeNumber"
                    }
                ]
            },
            "DataDictionaryFormatResponse": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/dataDictionaryFormat"
                    },
                    {
                        "$ref": "#/components/schemas/dataDictionaryFormatContents"
                    }
                ]
            },
            "dictionaryFormatTypeString": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "primitiveType": {
                        "$ref": "#/components/schemas/dictionaryFormatPrimitiveType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryFormatName"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dictionaryFormatNullable"
                    },
                    "type": {
                        "$ref": "#/components/schemas/dictionaryFormatType"
                    },
                    "standard": {
                        "$ref": "#/components/schemas/dictionaryFormatStandardNullable"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryFormatDescription"
                    },
                    "pattern": {
                        "$ref": "#/components/schemas/dictionaryFormatPattern"
                    },
                    "default": {
                        "$ref": "#/components/schemas/dictionaryFormatStringValue"
                    },
                    "example": {
                        "$ref": "#/components/schemas/dictionaryFormatStringValue"
                    },
                    "minLength": {
                        "$ref": "#/components/schemas/dictionaryFormatMinlengthNullable"
                    },
                    "maxLength": {
                        "$ref": "#/components/schemas/dictionaryFormatMaxlengthNullable"
                    },
                    "readOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatReadOnlyNullable"
                    },
                    "writeOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatWriteOnlyNullable"
                    },
                    "nullable": {
                        "$ref": "#/components/schemas/dictionaryFormatIsNullable"
                    },
                    "sensitivity": {
                        "$ref": "#/components/schemas/dictionaryFormatSensitivity"
                    },
                    "pii": {
                        "$ref": "#/components/schemas/dataDictionaryPII"
                    },
                    "objectIdentifier": {
                        "$ref": "#/components/schemas/objectIdentifier"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/dictionaryLastUpdate"
                    },
                    "lastChangeBy": {
                        "$ref": "#/components/schemas/uuid"
                    }
                },
                "required": [
                    "primitiveType",
                    "name",
                    "type",
                    "description",
                    "pattern",
                    "example",
                    "readOnly",
                    "writeOnly",
                    "nullable",
                    "sensitivity",
                    "pii",
                    "objectIdentifier",
                    "lastUpdate",
                    "lastChangeBy"
                ],
                "example": {
                    "primitiveType": "format",
                    "name": "42C-format-name",
                    "format": "hostname",
                    "type": "string",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                    "pattern": "^http\\://www.[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}/$",
                    "example": "http://www.domain.tld",
                    "minLength": 0,
                    "maxLength": 100,
                    "readOnly": false,
                    "writeOnly": false,
                    "nullable": false,
                    "sensitivity": 1,
                    "pii": "no",
                    "objectIdentifier": "no",
                    "lastUpdate": "1637949572",
                    "lastChangeBy": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                }
            },
            "dictionaryFormatTypeEnum": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "primitiveType",
                    "name",
                    "type",
                    "enum",
                    "example",
                    "description",
                    "readOnly",
                    "writeOnly",
                    "nullable",
                    "sensitivity",
                    "pii",
                    "objectIdentifier",
                    "lastUpdate",
                    "lastChangeBy"
                ],
                "properties": {
                    "primitiveType": {
                        "$ref": "#/components/schemas/dictionaryFormatPrimitiveType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryFormatName"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dictionaryFormatNullable"
                    },
                    "type": {
                        "$ref": "#/components/schemas/dictionaryFormatType"
                    },
                    "standard": {
                        "$ref": "#/components/schemas/dictionaryFormatStandardNullable"
                    },
                    "enum": {
                        "$ref": "#/components/schemas/dictionaryFormatEnum"
                    },
                    "default": {
                        "$ref": "#/components/schemas/dictionaryFormatStringValue"
                    },
                    "example": {
                        "$ref": "#/components/schemas/dictionaryFormatStringValue"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryFormatDescription"
                    },
                    "readOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatReadOnlyNullable"
                    },
                    "writeOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatWriteOnlyNullable"
                    },
                    "nullable": {
                        "$ref": "#/components/schemas/dictionaryFormatIsNullable"
                    },
                    "sensitivity": {
                        "$ref": "#/components/schemas/dictionaryFormatSensitivity"
                    },
                    "pii": {
                        "$ref": "#/components/schemas/dataDictionaryPII"
                    },
                    "objectIdentifier": {
                        "$ref": "#/components/schemas/objectIdentifier"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/dictionaryLastUpdate"
                    },
                    "lastChangeBy": {
                        "$ref": "#/components/schemas/uuid"
                    }
                },
                "example": {
                    "primitiveType": "format",
                    "name": "42c-format-name",
                    "format": "colors-type1",
                    "type": "string",
                    "enum": [
                        "yellow",
                        "blue",
                        "red",
                        "green"
                    ],
                    "example": "green",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                    "readOnly": false,
                    "writeOnly": false,
                    "nullable": false,
                    "sensitivity": 5,
                    "pii": "no",
                    "objectIdentifier": "no",
                    "lastUpdate": "1637949572",
                    "lastChangeBy": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                }
            },
            "dictionaryFormatTypeInteger": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "primitiveType": {
                        "$ref": "#/components/schemas/dictionaryFormatPrimitiveType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryFormatName"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dictionaryFormatNullable"
                    },
                    "type": {
                        "$ref": "#/components/schemas/dictionaryFormatType"
                    },
                    "standard": {
                        "$ref": "#/components/schemas/dictionaryFormatStandardNullable"
                    },
                    "default": {
                        "$ref": "#/components/schemas/dictionaryFormatIntegerValueNullable"
                    },
                    "example": {
                        "$ref": "#/components/schemas/dictionaryFormatIntegerValueNullable"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryFormatDescription"
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/dictionaryFormatMinimumNullable"
                    },
                    "exclusiveMinimum": {
                        "$ref": "#/components/schemas/dictionaryFormatExclusiveMinimumNullable"
                    },
                    "maximum": {
                        "$ref": "#/components/schemas/dictionaryFormatMaximumNullable"
                    },
                    "exclusiveMaximum": {
                        "$ref": "#/components/schemas/dictionaryFormatExclusiveMaximumNullable"
                    },
                    "multipleOf": {
                        "$ref": "#/components/schemas/dictionaryFormatMultipleOfNullable"
                    },
                    "readOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatReadOnlyNullable"
                    },
                    "writeOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatWriteOnlyNullable"
                    },
                    "nullable": {
                        "$ref": "#/components/schemas/dictionaryFormatIsNullable"
                    },
                    "sensitivity": {
                        "$ref": "#/components/schemas/dictionaryFormatSensitivity"
                    },
                    "pii": {
                        "$ref": "#/components/schemas/dataDictionaryPII"
                    },
                    "objectIdentifier": {
                        "$ref": "#/components/schemas/objectIdentifier"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/dictionaryLastUpdate"
                    },
                    "lastChangeBy": {
                        "$ref": "#/components/schemas/uuid"
                    }
                },
                "required": [
                    "primitiveType",
                    "name",
                    "type",
                    "example",
                    "description",
                    "readOnly",
                    "writeOnly",
                    "nullable",
                    "sensitivity",
                    "pii",
                    "objectIdentifier",
                    "lastUpdate",
                    "lastChangeBy"
                ],
                "example": {
                    "primitiveType": "format",
                    "name": "42c-format-name",
                    "format": "Loyalty-card",
                    "type": "integer",
                    "example": 9123412341234124,
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                    "minimum": 16,
                    "maximum": 16,
                    "readOnly": false,
                    "writeOnly": false,
                    "nullable": false,
                    "sensitivity": 5,
                    "pii": "no",
                    "objectIdentifier": "no",
                    "lastUpdate": "1637949572",
                    "lastChangeBy": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                }
            },
            "dictionaryFormatTypeNumber": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "primitiveType": {
                        "$ref": "#/components/schemas/dictionaryFormatPrimitiveType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryFormatName"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dictionaryFormatNullable"
                    },
                    "type": {
                        "$ref": "#/components/schemas/dictionaryFormatType"
                    },
                    "standard": {
                        "$ref": "#/components/schemas/dictionaryFormatStandardNullable"
                    },
                    "example": {
                        "$ref": "#/components/schemas/dictionaryFormatNumberValueNullable"
                    },
                    "default": {
                        "$ref": "#/components/schemas/dictionaryFormatNumberValueNullable"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryFormatDescription"
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/dictionaryFormatNumberMinimumNullable"
                    },
                    "exclusiveMinimum": {
                        "$ref": "#/components/schemas/dictionaryFormatExclusiveMinimumNullable"
                    },
                    "maximum": {
                        "$ref": "#/components/schemas/dictionaryFormatNumberMaximumNullable"
                    },
                    "exclusiveMaximum": {
                        "$ref": "#/components/schemas/dictionaryFormatExclusiveMaximumNullable"
                    },
                    "multipleOf": {
                        "$ref": "#/components/schemas/dictionaryFormatMultipleOfNullable"
                    },
                    "readOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatReadOnlyNullable"
                    },
                    "writeOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatWriteOnlyNullable"
                    },
                    "nullable": {
                        "$ref": "#/components/schemas/dictionaryFormatIsNullable"
                    },
                    "sensitivity": {
                        "$ref": "#/components/schemas/dictionaryFormatSensitivity"
                    },
                    "pii": {
                        "$ref": "#/components/schemas/dataDictionaryPII"
                    },
                    "objectIdentifier": {
                        "$ref": "#/components/schemas/objectIdentifier"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/dictionaryLastUpdate"
                    },
                    "lastChangeBy": {
                        "$ref": "#/components/schemas/uuid"
                    }
                },
                "required": [
                    "primitiveType",
                    "name",
                    "type",
                    "example",
                    "description",
                    "readOnly",
                    "writeOnly",
                    "nullable",
                    "sensitivity",
                    "pii",
                    "objectIdentifier",
                    "lastUpdate",
                    "lastChangeBy"
                ],
                "example": {
                    "primitiveType": "format",
                    "name": "average-score",
                    "format": "float",
                    "type": "number",
                    "example": 86.89,
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                    "minimum": 0,
                    "maximum": 100,
                    "readOnly": false,
                    "writeOnly": false,
                    "nullable": false,
                    "sensitivity": 1,
                    "pii": "no",
                    "objectIdentifier": "no",
                    "lastUpdate": "1637949572",
                    "lastChangeBy": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                }
            },
            "dataDictionaryFormatPayload": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/dictionaryFormatTypeStringPayload"
                    },
                    {
                        "$ref": "#/components/schemas/dictionaryFormatTypeEnumPayload"
                    },
                    {
                        "$ref": "#/components/schemas/dictionaryFormatTypeIntegerPayload"
                    },
                    {
                        "$ref": "#/components/schemas/dictionaryFormatTypeNumberPayload"
                    }
                ]
            },
            "dictionaryFormatTypeStringPayload": {
                "type": "object",
                "properties": {
                    "primitiveType": {
                        "$ref": "#/components/schemas/dictionaryFormatPrimitiveType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryFormatName"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dictionaryFormatNullable"
                    },
                    "type": {
                        "$ref": "#/components/schemas/dictionaryFormatType"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryFormatDescription"
                    },
                    "pattern": {
                        "$ref": "#/components/schemas/dictionaryFormatPattern"
                    },
                    "default": {
                        "$ref": "#/components/schemas/dictionaryFormatStringValue"
                    },
                    "example": {
                        "$ref": "#/components/schemas/dictionaryFormatStringValue"
                    },
                    "minLength": {
                        "$ref": "#/components/schemas/dictionaryFormatMinlengthNullable"
                    },
                    "maxLength": {
                        "$ref": "#/components/schemas/dictionaryFormatMaxlengthNullable"
                    },
                    "readOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatReadOnlyNullable"
                    },
                    "writeOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatWriteOnlyNullable"
                    },
                    "nullable": {
                        "$ref": "#/components/schemas/dictionaryFormatIsNullable"
                    },
                    "sensitivity": {
                        "$ref": "#/components/schemas/dictionaryFormatSensitivity"
                    },
                    "pii": {
                        "$ref": "#/components/schemas/dataDictionaryPII"
                    },
                    "objectIdentifier": {
                        "$ref": "#/components/schemas/objectIdentifier"
                    }
                },
                "required": [
                    "primitiveType",
                    "name",
                    "type",
                    "description",
                    "pattern",
                    "example",
                    "sensitivity",
                    "pii",
                    "objectIdentifier"
                ],
                "example": {
                    "primitiveType": "format",
                    "name": "42c-format-name",
                    "format": "hostname",
                    "type": "string",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                    "pattern": "^http\\://www.[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}/$",
                    "example": "http://www.domain.tld",
                    "minLength": 0,
                    "maxLength": 100,
                    "readOnly": false,
                    "writeOnly": false,
                    "nullable": false,
                    "sensitivity": 1,
                    "pii": "no",
                    "objectIdentifier": "no"
                }
            },
            "dictionaryFormatTypeEnumPayload": {
                "type": "object",
                "required": [
                    "primitiveType",
                    "name",
                    "type",
                    "example",
                    "description",
                    "enum",
                    "sensitivity",
                    "pii",
                    "objectIdentifier"
                ],
                "example": {
                    "primitiveType": "format",
                    "name": "42c_format-name",
                    "format": "colors-type1",
                    "type": "string",
                    "enum": [
                        "yellow",
                        "blue",
                        "red",
                        "green"
                    ],
                    "example": "green",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                    "readOnly": false,
                    "writeOnly": false,
                    "sensitivity": 5,
                    "pii": "no",
                    "objectIdentifier": "no"
                },
                "properties": {
                    "primitiveType": {
                        "$ref": "#/components/schemas/dictionaryFormatPrimitiveType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryFormatName"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dictionaryFormatNullable"
                    },
                    "type": {
                        "$ref": "#/components/schemas/dictionaryFormatType"
                    },
                    "enum": {
                        "$ref": "#/components/schemas/dictionaryFormatEnum"
                    },
                    "default": {
                        "type": "string"
                    },
                    "example": {
                        "$ref": "#/components/schemas/dictionaryFormatStringValue"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryFormatDescription"
                    },
                    "readOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatReadOnlyNullable"
                    },
                    "writeOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatWriteOnlyNullable"
                    },
                    "nullable": {
                        "$ref": "#/components/schemas/dictionaryFormatIsNullable"
                    },
                    "sensitivity": {
                        "$ref": "#/components/schemas/dictionaryFormatSensitivity"
                    },
                    "pii": {
                        "description": "Is this parameter a Personal Identifiable Information?",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "default": "no"
                    },
                    "objectIdentifier": {
                        "$ref": "#/components/schemas/objectIdentifier"
                    }
                }
            },
            "dictionaryFormatTypeIntegerPayload": {
                "type": "object",
                "properties": {
                    "primitiveType": {
                        "$ref": "#/components/schemas/dictionaryFormatPrimitiveType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryFormatName"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dictionaryFormatNullable"
                    },
                    "type": {
                        "$ref": "#/components/schemas/dictionaryFormatType"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryFormatDescription"
                    },
                    "default": {
                        "$ref": "#/components/schemas/dictionaryFormatIntegerValueNullable"
                    },
                    "example": {
                        "$ref": "#/components/schemas/dictionaryFormatIntegerValueNullable"
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/dictionaryFormatMinimumNullable"
                    },
                    "exclusiveMinimum": {
                        "$ref": "#/components/schemas/dictionaryFormatExclusiveMinimumNullable"
                    },
                    "maximum": {
                        "$ref": "#/components/schemas/dictionaryFormatMaximumNullable"
                    },
                    "exclusiveMaximum": {
                        "$ref": "#/components/schemas/dictionaryFormatExclusiveMaximumNullable"
                    },
                    "multipleOf": {
                        "$ref": "#/components/schemas/dictionaryFormatMultipleOfNullable"
                    },
                    "readOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatReadOnlyNullable"
                    },
                    "writeOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatWriteOnlyNullable"
                    },
                    "nullable": {
                        "$ref": "#/components/schemas/dictionaryFormatIsNullable"
                    },
                    "sensitivity": {
                        "$ref": "#/components/schemas/dictionaryFormatSensitivity"
                    },
                    "pii": {
                        "$ref": "#/components/schemas/dataDictionaryPII"
                    },
                    "objectIdentifier": {
                        "$ref": "#/components/schemas/objectIdentifier"
                    }
                },
                "required": [
                    "primitiveType",
                    "name",
                    "type",
                    "description",
                    "example",
                    "sensitivity",
                    "pii",
                    "objectIdentifier"
                ],
                "example": {
                    "primitiveType": "format",
                    "name": "42c-format-name",
                    "format": "Loyalty-card",
                    "type": "integer",
                    "example": 9123412341234124,
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                    "minimum": 16,
                    "maximum": 16,
                    "sensitivity": 5,
                    "pii": "no",
                    "objectIdentifier": "no"
                }
            },
            "dictionaryFormatTypeNumberPayload": {
                "type": "object",
                "properties": {
                    "primitiveType": {
                        "$ref": "#/components/schemas/dictionaryFormatPrimitiveType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/dictionaryFormatName"
                    },
                    "format": {
                        "$ref": "#/components/schemas/dictionaryFormatNullable"
                    },
                    "type": {
                        "$ref": "#/components/schemas/dictionaryFormatType"
                    },
                    "description": {
                        "$ref": "#/components/schemas/dictionaryFormatDescription"
                    },
                    "default": {
                        "$ref": "#/components/schemas/dictionaryFormatNumberValueNullable"
                    },
                    "example": {
                        "$ref": "#/components/schemas/dictionaryFormatNumberValueNullable"
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/dictionaryFormatNumberMinimumNullable"
                    },
                    "exclusiveMinimum": {
                        "$ref": "#/components/schemas/dictionaryFormatExclusiveMinimumNullable"
                    },
                    "maximum": {
                        "$ref": "#/components/schemas/dictionaryFormatNumberMaximumNullable"
                    },
                    "exclusiveMaximum": {
                        "$ref": "#/components/schemas/dictionaryFormatExclusiveMaximumNullable"
                    },
                    "multipleOf": {
                        "$ref": "#/components/schemas/dictionaryFormatMultipleOfNullable"
                    },
                    "readOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatReadOnlyNullable"
                    },
                    "writeOnly": {
                        "$ref": "#/components/schemas/dictionaryFormatWriteOnlyNullable"
                    },
                    "nullable": {
                        "$ref": "#/components/schemas/dictionaryFormatIsNullable"
                    },
                    "sensitivity": {
                        "$ref": "#/components/schemas/dictionaryFormatSensitivity"
                    },
                    "pii": {
                        "$ref": "#/components/schemas/dataDictionaryPII"
                    },
                    "objectIdentifier": {
                        "$ref": "#/components/schemas/objectIdentifier"
                    }
                },
                "required": [
                    "primitiveType",
                    "name",
                    "type",
                    "description",
                    "example",
                    "sensitivity",
                    "pii",
                    "objectIdentifier"
                ],
                "example": {
                    "primitiveType": "format",
                    "name": "scoring",
                    "format": "float",
                    "type": "number",
                    "example": 91.56,
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ligula dolor, placerat non iaculis at, laoreet nec massa. Proin vulputate tincidunt mauris vestibulum tempor. Donec non tellus ligula. Ut a nunc quis risus ultricies condimentum. Mauris mollis eu lorem nec sodales. ",
                    "minimum": 0,
                    "maximum": 100,
                    "sensitivity": 1,
                    "pii": "no",
                    "objectIdentifier": "no"
                }
            },
            "dataDictionaryPII": {
                "type": "string",
                "enum": [
                    "yes",
                    "no"
                ],
                "default": "no"
            },
            "objectIdentifier": {
                "type": "string",
                "enum": [
                    "yes",
                    "no"
                ],
                "default": "no"
            }
        },
        "parameters": {
            "QueryProtectionPath": {
                "name": "path",
                "in": "query",
                "required": true,
                "description": "The filesystem path must match the pattern below\n\n^(?:o\\/|42c\\/|(?:t|u)\\/(?:[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}))(?:(?!\\.\\.|\\.\\/|\\/\\/)(?:\\w|\\-|\\.|\\/)){2,500}$\n\nHere some examples of \"path\" parameter values: \n\n+ o\\/dirName1\\/dirName2\\/file.json\n+ o\\/file.json\n+ o\\/dirName1",
                "schema": {
                    "$ref": "#/components/schemas/ProtectionPath"
                }
            },
            "PathIdMe": {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                    "description": "`me` or A universally unique identifier (`UUID`) is a 128-bit label used for information in computer systems.",
                    "type": "string",
                    "pattern": "^(?:me|[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})$",
                    "maxLength": 36,
                    "minLength": 2,
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            },
            "RunningInstanceId": {
                "name": "runningInstanceId",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "DeploymentId": {
                "name": "deploymentId",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "PathId": {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "PathCategoryName": {
                "name": "categoryName",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/CategoryName"
                }
            },
            "PathConstraintType": {
                "name": "constraintType",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "default": "UNKNOWN",
                    "enum": [
                        "UNKNOWN",
                        "ASSESSMENT",
                        "SCAN",
                        "PROTECTION"
                    ]
                }
            },
            "PathTagName": {
                "name": "tagName",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/TagName"
                }
            },
            "QueryPlaceholder": {
                "name": "placeholder",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/PlaceHolder"
                }
            },
            "QueryCredentialName": {
                "name": "name",
                "description": "The name of the credential object name to find in the `placeholder`.",
                "required": true,
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/VaultName"
                }
            },
            "QueryId": {
                "name": "id",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryDeploymentId": {
                "name": "deploymentId",
                "description": "Deployment ID",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryDirectoryEnvironment": {
                "name": "environment",
                "in": "query",
                "required": false,
                "description": "{environment} allows to select the \"protection types\" or \"protection strategies\" file systems. Depending the value you will be able to get protection types or strategies files.",
                "schema": {
                    "type": "string",
                    "enum": [
                        "protectionTypes",
                        "protectionStrategies"
                    ],
                    "default": "protectionTypes",
                    "example": "protectionTypes"
                }
            },
            "QueryAid": {
                "name": "aid",
                "description": "API ID",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryRid": {
                "name": "rid",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryCid": {
                "name": "cid",
                "description": "collection ID",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "QueryOid": {
                "name": "oid",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QuerySQGByTagId": {
                "name": "tagId",
                "description": "The uuid of the tag to which we want to get associated Security Quality Gates Configuration",
                "required": false,
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                },
                "example": "987e4567-487b-9862-0987-467987944000"
            },
            "QueryTokenId": {
                "name": "tokenId",
                "in": "query",
                "description": "XXX LEGACY.",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryParentId": {
                "name": "parentId",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryReportFileId": {
                "name": "reportFileId",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryApiFirewallConfigurationId": {
                "name": "apiFirewallConfigurationId",
                "in": "query",
                "description": "Protection data.",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryGuardianConfigurationId": {
                "name": "guardianConfigurationId",
                "in": "query",
                "description": "Protection data.",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryTagIds": {
                "name": "tagIds",
                "in": "query",
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 999999999999,
                    "items": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                        "maxLength": 36,
                        "minLength": 36
                    }
                }
            },
            "QueryTagName": {
                "name": "tag",
                "in": "query",
                "description": "Search criteria.",
                "schema": {
                    "$ref": "#/components/schemas/TagName"
                }
            },
            "QueryName": {
                "name": "name",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "name64",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[\\w\\s\\.\\-\\_]{1,64}$"
                }
            },
            "QueryTechnicalNameFilter": {
                "name": "technicalNameFilter",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "QueryCollectionName": {
                "name": "collectionName",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/CollectionName"
                }
            },
            "QueryCollectionUuid": {
                "name": "collectionUuid",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryCollectionTechnicalName": {
                "name": "technicalName",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/CollectionTechnicalName"
                }
            },
            "QueryWithTags": {
                "name": "withTags",
                "description": "Include tags applied to the API in the response",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryEndpoint": {
                "name": "endpoint",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "QueryTechnicalNameSort": {
                "name": "sort",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "default",
                        "technicalname"
                    ],
                    "default": "default"
                }
            },
            "QueryTechnicalNameOrder": {
                "name": "order",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "default",
                        "desc",
                        "asc"
                    ],
                    "default": "default"
                }
            },
            "QueryVaultName": {
                "name": "vaultName",
                "in": "query",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/VaultName"
                }
            },
            "QueryVersion": {
                "name": "version",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "QueryValid": {
                "name": "valid",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryNotificationOnEvent": {
                "name": "onEvent",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/NotificationOnEvent"
                }
            },
            "QueryCreateAt": {
                "name": "createAt",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "QueryRevisionNumber": {
                "name": "revisionNumber",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 9223372036854775807
                }
            },
            "QueryRevisionVersion": {
                "name": "revisionVersion",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "QueryRevisionDescription": {
                "name": "revisionDescription",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "QueryTaskId": {
                "name": "taskId",
                "in": "query",
                "description": "Versioning Informations.",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryRevisionDate": {
                "name": "revisionDate",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "QuerySecuredRevisionOasCounter": {
                "name": "SecuredRevisionOasCounter",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0,
                    "maximum": 9223372036854775807
                }
            },
            "QueryDescription": {
                "name": "description",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "nameDescription",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$"
                }
            },
            "QueryLog": {
                "name": "log",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryFile": {
                "name": "file",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/base64"
                }
            },
            "QueryOasFile": {
                "name": "oasFile",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/base64"
                }
            },
            "QueryReadSpecFile": {
                "name": "readSpecFile",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryGetSpecFile": {
                "name": "specfile",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryData": {
                "name": "data",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/base64"
                }
            },
            "QuerySpecFile": {
                "name": "specfile",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/base64"
                }
            },
            "QueryYaml": {
                "name": "yaml",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryRevisionOasCounter": {
                "name": "revisionOasCounter",
                "in": "query",
                "schema": {
                    "minimum": 0,
                    "maximum": 4294967295,
                    "type": "integer",
                    "format": "uint32"
                }
            },
            "QueryLock": {
                "name": "lock",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryLockReason": {
                "name": "lockReason",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "nameDescription",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$"
                }
            },
            "QueryIsShared": {
                "name": "isShared",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryBool": {
                "name": "value",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryIsSharedWrite": {
                "name": "isSharedWrite",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "QueryScanConfiguration": {
                "name": "scanConfiguration",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/base64"
                }
            },
            "QueryScanConfigurationReport": {
                "name": "scanConfigurationReport",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/base64"
                }
            },
            "QueryReport": {
                "name": "report",
                "in": "query",
                "description": "Input Query Parameter.",
                "schema": {
                    "type": "boolean"
                }
            },
            "QuerySroid": {
                "name": "sroid",
                "in": "query",
                "description": "Secured Revision OpenAPI definition ID.",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryPcid": {
                "name": "pcid",
                "in": "query",
                "description": "Protection Configuration ID.",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryConfigurationId": {
                "name": "configurationId",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryValue": {
                "name": "value",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "QuerySearch": {
                "name": "search",
                "description": "Opt Filtering Input.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "QueryUserOrder": {
                "name": "order",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "EmailUserOrder",
                        "FirstnameUserOrder",
                        "LastnameUserOrder"
                    ],
                    "default": "EmailUserOrder"
                }
            },
            "QueryTeamOrder": {
                "name": "order",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "QueryUserRegistrationType": {
                "name": "registrationType",
                "in": "query",
                "schema": {
                    "type": "string",
                    "default": "Local",
                    "enum": [
                        "Local",
                        "Sso",
                        "Github",
                        "Microsoft",
                        "Google"
                    ]
                }
            },
            "QuerySort": {
                "name": "sort",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "QueryOrder": {
                "name": "order",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "QueryOrderDirection": {
                "name": "orderDirection",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "QueryPerPage": {
                "name": "perPage",
                "description": "page int64",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 9223372036854775807
                }
            },
            "QueryPage": {
                "name": "page",
                "description": "Pagination. int64",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 9223372036854775807
                }
            },
            "QueryTeamFilter": {
                "name": "filter",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "NoTeamFilter",
                        "NameTeamFilter",
                        "LeaderEmailTeamFilter"
                    ],
                    "default": "NoTeamFilter"
                }
            },
            "QueryDateLateJob": {
                "name": "dateLateJob",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "QueryNotifications": {
                "name": "notifications",
                "in": "query",
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 999999999999,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "QueryDependencyIds": {
                "name": "dependencyIds",
                "in": "query",
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 999999999999,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "QueryTimeRange": {
                "name": "timeRange",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "UnknownExecutiveTimeRange",
                        "Week",
                        "Month"
                    ],
                    "default": "UnknownExecutiveTimeRange"
                }
            },
            "QueryCollectionIds": {
                "name": "collectionIds",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/arrayString"
                }
            },
            "QueryChannelMedium": {
                "name": "medium",
                "in": "query",
                "schema": {
                    "title": "The order must never change",
                    "type": "string",
                    "default": "CHANNEL_MEDIUM_UNKNOWN",
                    "enum": [
                        "CHANNEL_MEDIUM_UNKNOWN",
                        "CHANNEL_MEDIUM_MAIL",
                        "CHANNEL_SLACK",
                        "CHANNEL_GITHUB"
                    ]
                }
            },
            "QueryScanMedium": {
                "name": "medium",
                "in": "query",
                "schema": {
                    "description": "**scan medium**\n* `0`: Unknown,\n* `1`: Platform,\n* 2 : OnPrem\n* `3`: CI/CD",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ]
                }
            },
            "QueryTags": {
                "name": "tags",
                "in": "query",
                "style": "form",
                "explode": true,
                "schema": {
                    "$ref": "#/components/schemas/arrayString"
                }
            },
            "QueryApiOrder": {
                "name": "order",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "default",
                        "desc",
                        "asc"
                    ],
                    "default": "default"
                }
            },
            "QueryApiSort": {
                "name": "sort",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "default",
                        "apiid",
                        "apiname"
                    ],
                    "default": "default"
                }
            },
            "QueryCreationDateFrom": {
                "name": "creationDateFrom",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/Timestamp"
                }
            },
            "QueryCreationDateTo": {
                "name": "creationDateTo",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/Timestamp"
                }
            },
            "QueryApiTechnicalName": {
                "name": "technicalName",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/TechnicalName"
                }
            },
            "QueryApiCollectionName": {
                "name": "collectionName",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/CollectionName"
                }
            },
            "QueryApiCollectionUuid": {
                "name": "collectionUuid",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryApiUserName": {
                "name": "userName",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/email"
                }
            },
            "QueryApiUserUuid": {
                "name": "userUuid",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryApiTagName": {
                "name": "tagName",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/TagName"
                }
            },
            "QueryApiTagUuid": {
                "name": "tagUuid",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/uuid"
                }
            },
            "QueryOpenApiKey": {
                "description": "Filter by issue's key containing the value",
                "name": "key",
                "in": "query",
                "required": false,
                "schema": {
                    "description": "openapi issue's key",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                }
            },
            "QueryOpenApiIssuesType": {
                "description": "Filter by issue type",
                "name": "type",
                "in": "query",
                "required": false,
                "schema": {
                    "description": "openapi issue's type",
                    "type": "string",
                    "enum": [
                        "validation",
                        "semantic",
                        "warning"
                    ]
                }
            },
            "QueryOpenApiVersion": {
                "description": "Filter by issue version",
                "name": "version",
                "in": "query",
                "required": false,
                "schema": {
                    "description": "openapi issue's version",
                    "type": "string",
                    "enum": [
                        "v2",
                        "v3"
                    ]
                }
            },
            "QueryAuditKey": {
                "description": "Filter by issue's key containing the value",
                "name": "key",
                "in": "query",
                "required": false,
                "schema": {
                    "description": "audit issue's key",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                }
            },
            "QueryAuditSection": {
                "description": "Filter by issue section",
                "name": "section",
                "in": "query",
                "required": false,
                "schema": {
                    "description": "audit issue's section",
                    "type": "string",
                    "enum": [
                        "schema",
                        "authentication",
                        "authorization",
                        "transport",
                        "parameters",
                        "paths",
                        "responsedefinition"
                    ]
                }
            },
            "QueryAuditVersion": {
                "description": "Filter by issue version",
                "name": "version",
                "in": "query",
                "required": false,
                "schema": {
                    "description": "audit issue's version",
                    "type": "string",
                    "enum": [
                        "v2",
                        "v3"
                    ]
                }
            },
            "QueryScanInjectionKey": {
                "description": "Filter by injection containing the value",
                "name": "key",
                "in": "query",
                "required": false,
                "schema": {
                    "description": "scan injection's key",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                }
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "name": "X-API-KEY",
                "in": "header"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    },
    "security": [
        {
            "cookieAuth": []
        },
        {
            "token": []
        }
    ]
}
